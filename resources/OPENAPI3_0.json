{
  "paths": {
    "/v1beta/models/{model}:generateMessage": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "model"
          }
        ],
        "operationId": "GenerateMessage",
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMessageRequest"
              }
            }
          },
          "description": "The request body."
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateMessageResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Generates a response from the model given an input `MessagePrompt`."
      }
    },
    "/v1beta/models/{model}/operations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "operationId": "ListOperationsByModel",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOperationsResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "x-google-operation-name": "ListOperations",
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model",
            "in": "path"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The standard list filter."
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "description": "The standard list page size."
          },
          {
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The standard list page token."
          }
        ],
        "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`."
      }
    },
    "/v1beta/tunedModels/{tunedModel}:streamGenerateContent": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "security": [],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "tunedModel",
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "description": "Generates a [streamed\nresponse](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)\nfrom the model given an input `GenerateContentRequest`.",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "x-google-operation-name": "StreamGenerateContent",
        "operationId": "StreamGenerateContentByTunedModel"
      }
    },
    "/v1beta/models/{model}:embedText": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "operationId": "EmbedText",
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedTextRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "model",
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [],
        "description": "Generates an embedding from the model given an input message.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedTextResponse"
                }
              }
            }
          }
        },
        "tags": [
          "generativelanguage"
        ]
      }
    },
    "/v1beta/models/{model}:countMessageTokens": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountMessageTokensResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "model",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "description": "Runs a model's tokenizer on a string and returns the token count.",
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountMessageTokensRequest"
              }
            }
          }
        },
        "operationId": "CountMessageTokens",
        "security": []
      }
    },
    "/v1beta/tunedModels/{tunedModel}/permissions/{permission}": {
      "patch": {
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          },
          "description": "Required. The permission to update.\n\nThe permission's `name` field is used to identify the permission to update."
        },
        "description": "Updates the permission.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "tunedModel"
          },
          {
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "permission",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$",
              "format": "google-fieldmask",
              "type": "string"
            },
            "description": "Required. The list of fields to update. Accepted ones:\n - role (`Permission.role` field)",
            "in": "query",
            "required": true,
            "name": "updateMask"
          }
        ],
        "security": [],
        "operationId": "UpdatePermission",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "delete": {
        "tags": [
          "generativelanguage"
        ],
        "operationId": "DeletePermission",
        "security": [],
        "description": "Deletes the permission.",
        "parameters": [
          {
            "required": true,
            "name": "tunedModel",
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "permission"
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Gets information about a specific Permission.",
        "parameters": [
          {
            "required": true,
            "name": "tunedModel",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "permission",
            "required": true,
            "in": "path"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "operationId": "GetPermission",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      }
    },
    "/v1beta/corpora/{corpus}/documents/{document}/chunks:batchDelete": {
      "post": {
        "operationId": "BatchDeleteChunks",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "description": "Batch delete `Chunk`s.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "name": "corpus",
            "in": "path"
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "document",
            "required": true,
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteChunksRequest"
              }
            }
          }
        },
        "security": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/tunedModels/{tunedModel}/operations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "tunedModel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "description": "The standard list filter.",
            "in": "query",
            "name": "filter"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "name": "pageSize",
            "description": "The standard list page size."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "The standard list page token.",
            "name": "pageToken"
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOperationsResponse"
                }
              }
            }
          }
        },
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.",
        "operationId": "ListOperations"
      }
    },
    "/v1beta/batches/{generateContentBatch}:cancel": {
      "post": {
        "security": [],
        "operationId": "CancelOperation",
        "description": "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of `1`,\ncorresponding to `Code.CANCELLED`.",
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "generateContentBatch",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/files": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "description": "Creates a `File`.",
        "tags": [
          "generativelanguage"
        ],
        "operationId": "CreateFile",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFileResponse"
                }
              }
            }
          }
        },
        "security": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileRequest"
              }
            }
          },
          "description": "The request body."
        }
      },
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "description": "Lists the metadata for `File`s owned by the requesting project.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Optional. Maximum number of `File`s to return per page.\nIf unspecified, defaults to 10. Maximum `page_size` is 100.",
            "name": "pageSize",
            "in": "query"
          },
          {
            "description": "Optional. A page token from a previous `ListFiles` call.",
            "schema": {
              "type": "string"
            },
            "name": "pageToken",
            "in": "query"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFilesResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "operationId": "ListFiles"
      }
    },
    "/v1beta/corpora/{corpus}/permissions": {
      "post": {
        "operationId": "CreatePermissionByCorpus",
        "x-google-operation-name": "CreatePermission",
        "description": "Create a permission to a specific resource.",
        "parameters": [
          {
            "name": "corpus",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          },
          "description": "Required. The permission to create."
        },
        "security": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "corpus",
            "required": true
          },
          {
            "description": "Optional. The maximum number of `Permission`s to return (per page).\nThe service may return fewer permissions.\n\nIf unspecified, at most 10 permissions will be returned.\nThis method returns at most 1000 permissions per page, even if you pass\nlarger page_size.",
            "in": "query",
            "name": "pageSize",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. A page token, received from a previous `ListPermissions` call.\n\nProvide the `page_token` returned by one request as an argument to the\nnext request to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListPermissions`\nmust match the call that provided the page token.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "pageToken"
          }
        ],
        "x-google-operation-name": "ListPermissions",
        "description": "Lists permissions for the specific resource.",
        "operationId": "ListPermissionsByCorpus",
        "security": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/tunedModels/{tunedModel}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "patch": {
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "tunedModel"
          },
          {
            "name": "updateMask",
            "schema": {
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$",
              "type": "string",
              "format": "google-fieldmask"
            },
            "description": "Optional. The list of fields to update.",
            "in": "query"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TunedModel"
                }
              }
            }
          }
        },
        "description": "Updates a tuned model.",
        "operationId": "UpdateTunedModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TunedModel"
              }
            }
          },
          "description": "Required. The tuned model to update."
        },
        "security": []
      },
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tunedModel",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Gets information about a specific TunedModel.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TunedModel"
                }
              }
            }
          }
        },
        "security": [],
        "operationId": "GetTunedModel"
      },
      "delete": {
        "operationId": "DeleteTunedModel",
        "security": [],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "tunedModel",
            "required": true
          }
        ],
        "description": "Deletes a tuned model.",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/models/{model}:streamGenerateContent": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "model",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          }
        ],
        "description": "Generates a [streamed\nresponse](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)\nfrom the model given an input `GenerateContentRequest`.",
        "operationId": "StreamGenerateContent",
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          }
        },
        "security": [],
        "tags": [
          "generativelanguage"
        ]
      }
    },
    "/v1beta/models/{model}:predictLongRunning": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "operationId": "PredictLongRunning",
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictLongRunningRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictLongRunningOperation"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "model",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Same as Predict but returns an LRO.",
        "x-google-lro": "true",
        "security": []
      }
    },
    "/v1beta/models/{model}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "model",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "description": "Gets information about a specific `Model` such as its version number, token\nlimits,\n[parameters](https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters)\nand other metadata. Refer to the [Gemini models\nguide](https://ai.google.dev/gemini-api/docs/models/gemini) for detailed\nmodel information.",
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "operationId": "GetModel"
      }
    },
    "/v1beta/corpora/{corpus}": {
      "patch": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Corpus"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Corpus"
              }
            }
          },
          "description": "Required. The `Corpus` to update."
        },
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "name": "corpus",
            "in": "path"
          },
          {
            "in": "query",
            "schema": {
              "format": "google-fieldmask",
              "type": "string",
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$"
            },
            "name": "updateMask",
            "required": true,
            "description": "Required. The list of fields to update.\nCurrently, this only supports updating `display_name`."
          }
        ],
        "operationId": "UpdateCorpus",
        "description": "Updates a `Corpus`.",
        "tags": [
          "generativelanguage"
        ]
      },
      "delete": {
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "operationId": "DeleteCorpus",
        "security": [],
        "parameters": [
          {
            "name": "corpus",
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "description": "Optional. If set to true, any `Document`s and objects related to this `Corpus` will\nalso be deleted.\n\nIf false (the default), a `FAILED_PRECONDITION` error will be returned if\n`Corpus` contains any `Document`s.",
            "name": "force"
          }
        ],
        "description": "Deletes a `Corpus`.",
        "tags": [
          "generativelanguage"
        ]
      },
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "operationId": "GetCorpus",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "corpus",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Gets information about a specific `Corpus`.",
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Corpus"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/dynamic/{dynamicId}:streamGenerateContent": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "operationId": "StreamGenerateContentByDynamicId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          },
          "description": "The request body."
        },
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "x-google-operation-name": "StreamGenerateContent",
        "parameters": [
          {
            "description": "Part of `model`. Required. The name of the `Model` to use for generating the completion.\n\nFormat: `models/{model}`.",
            "in": "path",
            "required": true,
            "name": "dynamicId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Generates a [streamed\nresponse](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)\nfrom the model given an input `GenerateContentRequest`."
      }
    },
    "/v1beta/batches/{generateContentBatch}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "operationId": "GetOperationByGenerateContentBatch",
        "tags": [
          "generativelanguage"
        ],
        "x-google-operation-name": "GetOperation",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "generateContentBatch",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true
          }
        ],
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/v1beta/corpora/{corpus}:query": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "description": "Performs semantic search over a `Corpus`.",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCorpusResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "operationId": "QueryCorpus",
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCorpusRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "corpus",
            "in": "path"
          }
        ]
      }
    },
    "/v1beta/models/{model}:batchEmbedText": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEmbedTextRequest"
              }
            }
          }
        },
        "operationId": "BatchEmbedText",
        "description": "Generates multiple embeddings from the model given input text in a\nsynchronous call.",
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchEmbedTextResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "model"
          }
        ],
        "tags": [
          "generativelanguage"
        ]
      }
    },
    "/v1beta/generatedFiles/{generatedFile}/operations/{operation}": {
      "get": {
        "x-google-operation-name": "GetOperation",
        "tags": [
          "generativelanguage"
        ],
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "operationId": "GetOperationByGeneratedFileAndOperation",
        "parameters": [
          {
            "in": "path",
            "name": "generatedFile",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "operation"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/corpora/{corpus}/documents/{document}/chunks": {
      "get": {
        "operationId": "ListChunks",
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          },
          {
            "name": "document",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "Optional. The maximum number of `Chunk`s to return (per page).\nThe service may return fewer `Chunk`s.\n\nIf unspecified, at most 10 `Chunk`s will be returned.\nThe maximum size limit is 100 `Chunk`s per page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "Optional. A page token, received from a previous `ListChunks` call.\n\nProvide the `next_page_token` returned in the response as an argument to\nthe next request to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListChunks`\nmust match the call that provided the page token.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Lists all `Chunk`s in a `Document`.",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListChunksResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": []
      },
      "post": {
        "requestBody": {
          "description": "Required. The `Chunk` to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chunk"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chunk"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "corpus",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "name": "document"
          }
        ],
        "operationId": "CreateChunk",
        "tags": [
          "generativelanguage"
        ],
        "description": "Creates a `Chunk`.",
        "security": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:generateText": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "security": [],
        "operationId": "GenerateText",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTextResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTextRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "model",
            "required": true
          }
        ],
        "description": "Generates a response from the model given an input message."
      }
    },
    "/v1beta/models/{model}:embedContent": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "model",
            "required": true
          }
        ],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbedContentRequest"
              }
            }
          }
        },
        "security": [],
        "operationId": "EmbedContent",
        "description": "Generates a text embedding vector from the input `Content` using the\nspecified [Gemini Embedding\nmodel](https://ai.google.dev/gemini-api/docs/models/gemini#text-embedding).",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedContentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/models/{model}:countTextTokens": {
      "post": {
        "description": "Runs a model's tokenizer on a text and returns the token count.",
        "operationId": "CountTextTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountTextTokensRequest"
              }
            }
          },
          "description": "The request body."
        },
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountTextTokensResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "model"
          }
        ],
        "tags": [
          "generativelanguage"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/tunedModels/{tunedModel}/operations/{operation}": {
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
        "parameters": [
          {
            "name": "tunedModel",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "operation"
          }
        ],
        "security": [],
        "operationId": "GetOperation",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:countTokens": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "description": "Runs a model's tokenizer on input `Content` and returns the token count.\nRefer to the [tokens guide](https://ai.google.dev/gemini-api/docs/tokens)\nto learn more about tokens.",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "model",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountTokensRequest"
              }
            }
          },
          "description": "The request body."
        },
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountTokensResponse"
                }
              }
            }
          }
        },
        "operationId": "CountTokens",
        "security": []
      }
    },
    "/v1beta/corpora": {
      "post": {
        "description": "Creates an empty `Corpus`.",
        "security": [],
        "operationId": "CreateCorpus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Corpus"
              }
            }
          },
          "description": "Required. The `Corpus` to create."
        },
        "tags": [
          "generativelanguage"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Corpus"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "operationId": "ListCorpora",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCorporaResponse"
                }
              }
            }
          }
        },
        "security": [],
        "description": "Lists all `Corpora` owned by the user.",
        "parameters": [
          {
            "name": "pageSize",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "in": "query",
            "description": "Optional. The maximum number of `Corpora` to return (per page).\nThe service may return fewer `Corpora`.\n\nIf unspecified, at most 10 `Corpora` will be returned.\nThe maximum size limit is 20 `Corpora` per page."
          },
          {
            "in": "query",
            "description": "Optional. A page token, received from a previous `ListCorpora` call.\n\nProvide the `next_page_token` returned in the response as an argument to\nthe next request to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListCorpora`\nmust match the call that provided the page token.",
            "schema": {
              "type": "string"
            },
            "name": "pageToken"
          }
        ]
      }
    },
    "/v1beta/files/{file}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "name": "file",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "operationId": "DeleteFile",
        "security": [],
        "description": "Deletes the `File`.",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "get": {
        "operationId": "GetFile",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": [],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "name": "file"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "description": "Gets the metadata for the given `File`."
      }
    },
    "/v1beta/generatedFiles": {
      "get": {
        "description": "Lists the generated files owned by the requesting project.",
        "operationId": "ListGeneratedFiles",
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "description": "Optional. Maximum number of `GeneratedFile`s to return per page.\nIf unspecified, defaults to 10. Maximum `page_size` is 50.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "name": "pageSize"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "pageToken",
            "description": "Optional. A page token from a previous `ListGeneratedFiles` call."
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGeneratedFilesResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "security": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModelsResponse"
                }
              }
            }
          }
        },
        "operationId": "ListModels",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "name": "pageSize",
            "description": "The maximum number of `Models` to return (per page).\n\nIf unspecified, 50 models will be returned per page.\nThis method returns at most 1000 models per page, even if you pass a larger\npage_size."
          },
          {
            "description": "A page token, received from a previous `ListModels` call.\n\nProvide the `page_token` returned by one request as an argument to the next\nrequest to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListModels` must match\nthe call that provided the page token.",
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "description": "Lists the [`Model`s](https://ai.google.dev/gemini-api/docs/models/gemini)\navailable through the Gemini API."
      }
    },
    "/v1beta/corpora/{corpus}/documents": {
      "post": {
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "description": "Creates an empty `Document`.",
        "operationId": "CreateDocument",
        "requestBody": {
          "description": "Required. The `Document` to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "corpus",
            "in": "path"
          }
        ]
      },
      "get": {
        "operationId": "ListDocuments",
        "parameters": [
          {
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "corpus"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Optional. The maximum number of `Document`s to return (per page).\nThe service may return fewer `Document`s.\n\nIf unspecified, at most 10 `Document`s will be returned.\nThe maximum size limit is 20 `Document`s per page.",
            "name": "pageSize",
            "in": "query"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional. A page token, received from a previous `ListDocuments` call.\n\nProvide the `next_page_token` returned in the response as an argument to\nthe next request to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListDocuments`\nmust match the call that provided the page token.",
            "name": "pageToken"
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsResponse"
                }
              }
            }
          }
        },
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "description": "Lists all `Document`s in a `Corpus`."
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:batchEmbedContents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "description": "Generates multiple embedding vectors from the input `Content` which\nconsists of a batch of strings represented as `EmbedContentRequest`\nobjects.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true,
            "name": "model"
          }
        ],
        "security": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchEmbedContentsResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEmbedContentsRequest"
              }
            }
          }
        },
        "tags": [
          "generativelanguage"
        ],
        "operationId": "BatchEmbedContents"
      }
    },
    "/v1beta/corpora/{corpus}/documents/{document}/chunks/{chunk}": {
      "get": {
        "description": "Gets information about a specific `Chunk`.",
        "operationId": "GetChunk",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chunk"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": [],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "name": "document"
          },
          {
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "chunk",
            "required": true,
            "in": "path"
          }
        ],
        "tags": [
          "generativelanguage"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          },
          {
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "document",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "chunk"
          }
        ],
        "description": "Deletes a `Chunk`.",
        "security": [],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "tags": [
          "generativelanguage"
        ],
        "operationId": "DeleteChunk"
      },
      "patch": {
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "description": "Updates a `Chunk`.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chunk"
                }
              }
            }
          }
        },
        "operationId": "UpdateChunk",
        "parameters": [
          {
            "name": "corpus",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "document",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "chunk",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          },
          {
            "description": "Required. The list of fields to update.\nCurrently, this only supports updating `custom_metadata` and `data`.",
            "schema": {
              "format": "google-fieldmask",
              "type": "string",
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$"
            },
            "in": "query",
            "required": true,
            "name": "updateMask"
          }
        ],
        "requestBody": {
          "description": "Required. The `Chunk` to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chunk"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:predict": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictRequest"
              }
            }
          }
        },
        "operationId": "Predict",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Performs a prediction request.",
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "name": "model",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": []
      }
    },
    "/v1beta/tunedModels/{tunedModel}:generateContent": {
      "post": {
        "description": "Generates a model response given an input `GenerateContentRequest`.\nRefer to the [text generation\nguide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed\nusage information. Input capabilities differ between models, including\ntuned models. Refer to the [model\nguide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning\nguide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.",
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "name": "tunedModel",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          }
        },
        "operationId": "GenerateContentByTunedModel",
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "x-google-operation-name": "GenerateContent"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/batches": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The standard list filter.",
            "name": "filter"
          },
          {
            "description": "The standard list page size.",
            "name": "pageSize",
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The standard list page token.",
            "schema": {
              "type": "string"
            },
            "name": "pageToken",
            "in": "query"
          }
        ],
        "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.",
        "x-google-operation-name": "ListOperations",
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "operationId": "ListOperationsBy",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOperationsResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/tunedModels/{tunedModel}/permissions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "operationId": "CreatePermission",
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Create a permission to a specific resource.",
        "requestBody": {
          "description": "Required. The permission to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "tunedModel",
            "in": "path"
          }
        ]
      },
      "get": {
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "name": "tunedModel",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "name": "pageSize",
            "in": "query",
            "description": "Optional. The maximum number of `Permission`s to return (per page).\nThe service may return fewer permissions.\n\nIf unspecified, at most 10 permissions will be returned.\nThis method returns at most 1000 permissions per page, even if you pass\nlarger page_size."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional. A page token, received from a previous `ListPermissions` call.\n\nProvide the `page_token` returned by one request as an argument to the\nnext request to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListPermissions`\nmust match the call that provided the page token.",
            "name": "pageToken"
          }
        ],
        "operationId": "ListPermissions",
        "security": [],
        "description": "Lists permissions for the specific resource.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1beta/dynamic/{dynamicId}:generateContent": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "description": "Generates a model response given an input `GenerateContentRequest`.\nRefer to the [text generation\nguide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed\nusage information. Input capabilities differ between models, including\ntuned models. Refer to the [model\nguide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning\nguide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "dynamicId",
            "schema": {
              "type": "string"
            },
            "description": "Part of `model`. Required. The name of the `Model` to use for generating the completion.\n\nFormat: `models/{model}`."
          }
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            }
          }
        },
        "tags": [
          "generativelanguage"
        ],
        "x-google-operation-name": "GenerateContent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          },
          "description": "The request body."
        },
        "security": [],
        "operationId": "GenerateContentByDynamicId"
      }
    },
    "/v1beta/cachedContents/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CachedContent"
                }
              }
            }
          }
        },
        "operationId": "GetCachedContent",
        "description": "Reads CachedContent resource.",
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string"
            },
            "name": "id",
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ]
      },
      "patch": {
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "description": "Required. The content cache entry to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CachedContent"
              }
            }
          }
        },
        "security": [],
        "operationId": "UpdateCachedContent",
        "description": "Updates CachedContent resource (only expiration is updatable).",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "id"
          },
          {
            "in": "query",
            "description": "The list of fields to update.",
            "schema": {
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$",
              "type": "string",
              "format": "google-fieldmask"
            },
            "name": "updateMask"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CachedContent"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id"
          }
        ],
        "operationId": "DeleteCachedContent",
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Deletes CachedContent resource."
      }
    },
    "/v1beta/corpora/{corpus}/documents/{document}/chunks:batchCreate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCreateChunksResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateChunksRequest"
              }
            }
          },
          "description": "The request body."
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "required": true,
            "name": "document",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path"
          }
        ],
        "security": [],
        "description": "Batch create `Chunk`s.",
        "operationId": "BatchCreateChunks",
        "tags": [
          "generativelanguage"
        ]
      }
    },
    "/v1beta/cachedContents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "operationId": "ListCachedContents",
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCachedContentsResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "in": "query",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "description": "Optional. The maximum number of cached contents to return. The service may return\nfewer than this value.\nIf unspecified, some default (under maximum) number of items will be\nreturned.\nThe maximum value is 1000; values above 1000 will be coerced to 1000.",
            "name": "pageSize"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "pageToken",
            "description": "Optional. A page token, received from a previous `ListCachedContents` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListCachedContents` must\nmatch the call that provided the page token.",
            "in": "query"
          }
        ],
        "description": "Lists CachedContents."
      },
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CachedContent"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Required. The cached content to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CachedContent"
              }
            }
          }
        },
        "operationId": "CreateCachedContent",
        "description": "Creates CachedContent resource."
      }
    },
    "/v1beta/tunedModels/{tunedModel}:transferOwnership": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "tunedModel"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOwnershipResponse"
                }
              }
            }
          }
        },
        "security": [],
        "description": "Transfers ownership of the tuned model.\nThis is the only way to change ownership of the tuned model.\nThe current owner will be downgraded to writer role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwnershipRequest"
              }
            }
          },
          "description": "The request body."
        },
        "operationId": "TransferOwnership"
      }
    },
    "/v1beta/corpora/{corpus}/permissions/{permission}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "description": "Gets information about a specific Permission.",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        },
        "operationId": "GetPermissionByCorpusAndPermission",
        "x-google-operation-name": "GetPermission",
        "parameters": [
          {
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "name": "permission",
            "required": true
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "security": []
      },
      "patch": {
        "requestBody": {
          "description": "Required. The permission to update.\n\nThe permission's `name` field is used to identify the permission to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "name": "corpus"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "permission",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "description": "Required. The list of fields to update. Accepted ones:\n - role (`Permission.role` field)",
            "name": "updateMask",
            "schema": {
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$",
              "type": "string",
              "format": "google-fieldmask"
            },
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "operationId": "UpdatePermissionByCorpusAndPermission",
        "x-google-operation-name": "UpdatePermission",
        "description": "Updates the permission."
      },
      "delete": {
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Deletes the permission.",
        "operationId": "DeletePermissionByCorpusAndPermission",
        "parameters": [
          {
            "name": "corpus",
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "permission",
            "schema": {
              "type": "string"
            },
            "required": true,
            "in": "path"
          }
        ],
        "x-google-operation-name": "DeletePermission",
        "tags": [
          "generativelanguage"
        ]
      }
    },
    "/v1beta/files/{file}:download": {
      "get": {
        "operationId": "DownloadFile",
        "description": "Download the `File`.",
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadFileResponse"
                }
              }
            }
          }
        },
        "security": [],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "in": "path",
            "name": "file"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/generatedFiles/{generatedFile}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "generatedFile",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedFile"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "description": "Gets a generated file. When calling this method via REST, only the metadata\nof the generated file is returned. To retrieve the file content via REST,\nadd alt=media as a query parameter.",
        "operationId": "GetGeneratedFile"
      }
    },
    "/v1beta/tunedModels": {
      "post": {
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "parameters": [
          {
            "name": "tunedModelId",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional. The unique id for the tuned model if specified.\nThis value should be up to 40 characters, the first character must be a\nletter, the last could be a letter or a number. The id must match the\nregular expression: `[a-z]([a-z0-9-]{0,38}[a-z0-9])?`."
          }
        ],
        "requestBody": {
          "description": "Required. The tuned model to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TunedModel"
              }
            }
          }
        },
        "operationId": "CreateTunedModel",
        "description": "Creates a tuned model.\nCheck intermediate tuning progress (if any) through the\n[google.longrunning.Operations] service.\n\nAccess status and results through the Operations service.\nExample:\n  GET /v1/tunedModels/az2mb0bpw6i/operations/000-111-222",
        "x-google-lro": "true",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTunedModelOperation"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [],
        "operationId": "ListTunedModels",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTunedModelsResponse"
                }
              }
            }
          }
        },
        "description": "Lists created tuned models.",
        "parameters": [
          {
            "in": "query",
            "description": "Optional. The maximum number of `TunedModels` to return (per page).\nThe service may return fewer tuned models.\n\nIf unspecified, at most 10 tuned models will be returned.\nThis method returns at most 1000 models per page, even if you pass a larger\npage_size.",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageToken",
            "description": "Optional. A page token, received from a previous `ListTunedModels` call.\n\nProvide the `page_token` returned by one request as an argument to the next\nrequest to retrieve the next page.\n\nWhen paginating, all other parameters provided to `ListTunedModels`\nmust match the call that provided the page token.",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "filter",
            "description": "Optional. A filter is a full text search over the tuned model's description and\ndisplay name. By default, results will not include tuned models shared\nwith everyone.\n\nAdditional operators:\n  - owner:me\n  - writers:me\n  - readers:me\n  - readers:everyone\n\nExamples:\n  \"owner:me\" returns all tuned models to which caller has owner role\n  \"readers:me\" returns all tuned models to which caller has reader role\n  \"readers:everyone\" returns all tuned models that are shared with everyone"
          }
        ],
        "tags": [
          "generativelanguage"
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/corpora/{corpus}/documents/{document}": {
      "get": {
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "required": true,
            "in": "path"
          },
          {
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "document"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "description": "Gets information about a specific `Document`.",
        "security": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "patch": {
        "operationId": "UpdateDocument",
        "security": [],
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "corpus"
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "document",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "in": "query",
            "name": "updateMask",
            "schema": {
              "type": "string",
              "format": "google-fieldmask",
              "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$"
            },
            "description": "Required. The list of fields to update.\nCurrently, this only supports updating `display_name` and\n`custom_metadata`.",
            "required": true
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "description": "Updates a `Document`.",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "requestBody": {
          "description": "Required. The `Document` to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "corpus",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path"
          },
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "in": "path",
            "name": "document"
          },
          {
            "description": "Optional. If set to true, any `Chunk`s and objects related to this `Document` will\nalso be deleted.\n\nIf false (the default), a `FAILED_PRECONDITION` error will be returned if\n`Document` contains any `Chunk`s.",
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "security": [],
        "tags": [
          "generativelanguage"
        ],
        "operationId": "DeleteDocument",
        "description": "Deletes a `Document`."
      }
    },
    "/v1beta/corpora/{corpus}/documents/{document}/chunks:batchUpdate": {
      "post": {
        "operationId": "BatchUpdateChunks",
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateChunksResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateChunksRequest"
              }
            }
          },
          "description": "The request body."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "corpus",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "in": "path",
            "required": true
          },
          {
            "in": "path",
            "name": "document",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "description": "Batch update `Chunk`s.",
        "security": []
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:generateAnswer": {
      "post": {
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateAnswerResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "model",
            "required": true,
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAnswerRequest"
              }
            }
          },
          "description": "The request body."
        },
        "tags": [
          "generativelanguage"
        ],
        "security": [],
        "description": "Generates a grounded answer from the model given an input\n`GenerateAnswerRequest`.",
        "operationId": "GenerateAnswer"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/tunedModels/{tunedModel}:generateText": {
      "post": {
        "parameters": [
          {
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "tunedModel",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [],
        "operationId": "GenerateTextByTunedModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTextRequest"
              }
            }
          },
          "description": "The request body."
        },
        "x-google-operation-name": "GenerateText",
        "tags": [
          "generativelanguage"
        ],
        "description": "Generates a response from the model given an input message.",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTextResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/corpora/{corpus}/documents/{document}:query": {
      "post": {
        "security": [],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "corpus",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "document",
            "schema": {
              "type": "string"
            },
            "in": "path"
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "responses": {
          "default": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDocumentResponse"
                }
              }
            }
          }
        },
        "operationId": "QueryDocument",
        "description": "Performs semantic search over a `Document`.",
        "requestBody": {
          "description": "The request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryDocumentRequest"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}:generateContent": {
      "post": {
        "tags": [
          "generativelanguage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          },
          "description": "The request body."
        },
        "description": "Generates a model response given an input `GenerateContentRequest`.\nRefer to the [text generation\nguide](https://ai.google.dev/gemini-api/docs/text-generation) for detailed\nusage information. Input capabilities differ between models, including\ntuned models. Refer to the [model\nguide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning\nguide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "model"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateContentResponse"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "operationId": "GenerateContent"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ]
    },
    "/v1beta/models/{model}/operations/{operation}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/alt"
        },
        {
          "$ref": "#/components/parameters/callback"
        },
        {
          "$ref": "#/components/parameters/prettyPrint"
        },
        {
          "$ref": "#/components/parameters/_.xgafv"
        }
      ],
      "get": {
        "security": [],
        "x-google-operation-name": "GetOperation",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "in": "path",
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.",
            "name": "model",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "operation",
            "required": true,
            "description": "Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122."
          }
        ],
        "tags": [
          "generativelanguage"
        ],
        "operationId": "GetOperationByModelAndOperation",
        "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
      }
    }
  },
  "externalDocs": {
    "url": "https://developers.generativeai.google/api",
    "description": "Find more info here."
  },
  "components": {
    "securitySchemes": {},
    "parameters": {
      "prettyPrint": {
        "name": "$prettyPrint",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": "true"
        },
        "description": "Returns response with indentations and line breaks."
      },
      "_.xgafv": {
        "description": "V1 error format.",
        "schema": {
          "enum": [
            "1",
            "2"
          ],
          "type": "string",
          "x-google-enum-descriptions": [
            "v1 error format",
            "v2 error format"
          ]
        },
        "in": "query",
        "name": "$.xgafv"
      },
      "alt": {
        "in": "query",
        "name": "$alt",
        "schema": {
          "x-google-enum-descriptions": [
            "Responses with Content-Type of application/json",
            "Media download with context-dependent Content-Type",
            "Responses with Content-Type of application/x-protobuf"
          ],
          "enum": [
            "json",
            "media",
            "proto"
          ],
          "type": "string",
          "default": "json"
        },
        "description": "Data format for response."
      },
      "callback": {
        "in": "query",
        "name": "$callback",
        "schema": {
          "type": "string"
        },
        "description": "JSONP"
      }
    },
    "schemas": {
      "TopCandidates": {
        "properties": {
          "candidates": {
            "description": "Sorted by log probability in descending order.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogprobsResultCandidate"
            }
          }
        },
        "description": "Candidates with top log probabilities at each decoding step.",
        "type": "object"
      },
      "FunctionDeclaration": {
        "description": "Structured representation of a function declaration as defined by the\n[OpenAPI 3.03 specification](https://spec.openapis.org/oas/v3.0.3). Included\nin this declaration are the function name and parameters. This\nFunctionDeclaration is a representation of a block of code that can be used\nas a `Tool` by the model and executed by the client.",
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "responseJsonSchema": {
            "description": "Optional. Describes the output from this function in JSON Schema format. The value\nspecified by the schema is the response value of the function.\n\nThis field is mutually exclusive with `response`."
          },
          "parameters": {
            "description": "Optional. Describes the parameters to this function. Reflects the Open API 3.03\nParameter Object string Key: the name of the parameter. Parameter names are\ncase sensitive. Schema Value: the Schema defining the type used for the\nparameter.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Schema"
              }
            ]
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Schema"
              }
            ],
            "description": "Optional. Describes the output from this function in JSON Schema format. Reflects the\nOpen API 3.03 Response Object. The Schema defines the type used for the\nresponse value of the function."
          },
          "description": {
            "description": "Required. A brief description of the function.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the function.\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum\nlength of 63.",
            "type": "string"
          },
          "behavior": {
            "enum": [
              "UNSPECIFIED",
              "BLOCKING",
              "NON_BLOCKING"
            ],
            "type": "string",
            "x-google-enum-descriptions": [
              "This value is unused.",
              "If set, the system will wait to receive the function response before\ncontinuing the conversation.",
              "If set, the system will not wait to receive the function response.\nInstead, it will attempt to handle function responses as they become\navailable while maintaining the conversation between the user and the\nmodel."
            ],
            "description": "Optional. Specifies the function Behavior.\nCurrently only supported by the BidiGenerateContent method."
          },
          "parametersJsonSchema": {
            "description": "Optional. Describes the parameters to the function in JSON Schema format. The schema\nmust describe an object where the properties are the parameters to the\nfunction. For example:\n\n```\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": { \"type\": \"string\" },\n    \"age\": { \"type\": \"integer\" }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"name\", \"age\"],\n  \"propertyOrdering\": [\"name\", \"age\"]\n}\n```\n\nThis field is mutually exclusive with `parameters`."
          }
        }
      },
      "AttributionSourceId": {
        "description": "Identifier for the source contributing to this attribution.",
        "properties": {
          "semanticRetrieverChunk": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SemanticRetrieverChunk"
              }
            ],
            "description": "Identifier for a `Chunk` fetched via Semantic Retriever."
          },
          "groundingPassage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroundingPassageId"
              }
            ],
            "description": "Identifier for an inline passage."
          }
        },
        "type": "object"
      },
      "CreateFileResponse": {
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "description": "Metadata for the created file."
          }
        },
        "description": "Response for `CreateFile`.",
        "type": "object"
      },
      "DeleteChunkRequest": {
        "required": [
          "name"
        ],
        "description": "Request to delete a `Chunk`.",
        "properties": {
          "name": {
            "description": "Required. The resource name of the `Chunk` to delete.\nExample: `corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Embedding": {
        "properties": {
          "value": {
            "description": "The embedding values.",
            "type": "array",
            "items": {
              "format": "float",
              "type": "number"
            }
          }
        },
        "description": "A list of floats representing the embedding.",
        "type": "object"
      },
      "GroundingPassageId": {
        "properties": {
          "passageId": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. ID of the passage matching the `GenerateAnswerRequest`'s\n`GroundingPassage.id`."
          },
          "partIndex": {
            "type": "integer",
            "description": "Output only. Index of the part within the `GenerateAnswerRequest`'s\n`GroundingPassage.content`.",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "Identifier for a part within a `GroundingPassage`.",
        "type": "object"
      },
      "GenerateTextResponse": {
        "properties": {
          "safetyFeedback": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyFeedback"
            },
            "description": "Returns any safety feedback related to content filtering."
          },
          "candidates": {
            "description": "Candidate responses from the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextCompletion"
            }
          },
          "filters": {
            "type": "array",
            "description": "A set of content filtering metadata for the prompt and response\ntext.\n\nThis indicates which `SafetyCategory`(s) blocked a\ncandidate from this response, the lowest `HarmProbability`\nthat triggered a block, and the HarmThreshold setting for that category.\nThis indicates the smallest change to the `SafetySettings` that would be\nnecessary to unblock at least 1 response.\n\nThe blocking is configured by the `SafetySettings` in the request (or the\ndefault `SafetySettings` of the API).",
            "items": {
              "$ref": "#/components/schemas/ContentFilter"
            }
          }
        },
        "type": "object",
        "description": "The response from the model, including candidate completions."
      },
      "SpeakerVoiceConfig": {
        "description": "The configuration for a single speaker in a multi speaker setup.",
        "required": [
          "speaker",
          "voiceConfig"
        ],
        "type": "object",
        "properties": {
          "speaker": {
            "description": "Required. The name of the speaker to use. Should be the same as in the prompt.",
            "type": "string"
          },
          "voiceConfig": {
            "description": "Required. The configuration for the voice to use.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConfig"
              }
            ]
          }
        }
      },
      "TextPrompt": {
        "properties": {
          "text": {
            "type": "string",
            "description": "Required. The prompt text."
          }
        },
        "description": "Text given to the model as a prompt.\n\nThe Model will use this TextPrompt to Generate a text completion.",
        "required": [
          "text"
        ],
        "type": "object"
      },
      "CitationSource": {
        "type": "object",
        "properties": {
          "uri": {
            "description": "Optional. URI that is attributed as a source for a portion of the text.",
            "type": "string"
          },
          "license": {
            "type": "string",
            "description": "Optional. License for the GitHub project that is attributed as a source for segment.\n\nLicense info is required for code citations."
          },
          "endIndex": {
            "description": "Optional. End of the attributed segment, exclusive.",
            "type": "integer",
            "format": "int32"
          },
          "startIndex": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. Start of segment of the response that is attributed to this source.\n\nIndex indicates the start of the segment, measured in bytes."
          }
        },
        "description": "A citation to a source for a portion of a specific response."
      },
      "BatchUpdateChunksResponse": {
        "type": "object",
        "description": "Response from `BatchUpdateChunks` containing a list of updated `Chunk`s.",
        "properties": {
          "chunks": {
            "type": "array",
            "description": "`Chunk`s updated.",
            "items": {
              "$ref": "#/components/schemas/Chunk"
            }
          }
        }
      },
      "PredictResponse": {
        "type": "object",
        "description": "Response message for [PredictionService.Predict].",
        "properties": {
          "predictions": {
            "type": "array",
            "description": "The outputs of the prediction call.",
            "items": {}
          }
        }
      },
      "Document": {
        "description": "A `Document` is a collection of `Chunk`s.\nA `Corpus` can have a maximum of 10,000 `Document`s.",
        "properties": {
          "customMetadata": {
            "description": "Optional. User provided custom metadata stored as key-value pairs used for querying.\nA `Document` can have a maximum of 20 `CustomMetadata`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomMetadata"
            }
          },
          "updateTime": {
            "format": "date-time",
            "description": "Output only. The Timestamp of when the `Document` was last updated.",
            "type": "string",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Optional. The human-readable display name for the `Document`. The display name must\nbe no more than 512 characters in length, including spaces.\nExample: \"Semantic Retriever Documentation\""
          },
          "name": {
            "description": "Immutable. Identifier. The `Document` resource name. The ID (name excluding the\n\"corpora/*/documents/\" prefix) can contain up to 40 characters that are\nlowercase alphanumeric or dashes (-). The ID cannot start or end with a\ndash. If the name is empty on create, a unique name will be derived from\n`display_name` along with a 12 character random suffix.\nExample: `corpora/{corpus_id}/documents/my-awesome-doc-123a456b789c`",
            "type": "string",
            "x-google-identifier": true,
            "x-google-immutable": true
          },
          "createTime": {
            "type": "string",
            "description": "Output only. The Timestamp of when the `Document` was created.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ListPermissionsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\n\nIf this field is omitted, there are no more pages.",
            "type": "string"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "description": "Returned permissions.",
            "type": "array"
          }
        },
        "description": "Response from `ListPermissions` containing a paginated list of\npermissions."
      },
      "CountTokensRequest": {
        "properties": {
          "contents": {
            "description": "Optional. The input given to the model as a prompt. This field is ignored when\n`generate_content_request` is set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          },
          "generateContentRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            ],
            "description": "Optional. The overall input given to the `Model`. This includes the prompt as well as\nother model steering information like [system\ninstructions](https://ai.google.dev/gemini-api/docs/system-instructions),\nand/or function declarations for [function\ncalling](https://ai.google.dev/gemini-api/docs/function-calling).\n`Model`s/`Content`s and `generate_content_request`s are mutually\nexclusive. You can either send `Model` + `Content`s or a\n`generate_content_request`, but never both."
          }
        },
        "description": "Counts the number of tokens in the `prompt` sent to a model.\n\nModels may tokenize text differently, so each model may return a different\n`token_count`.",
        "type": "object"
      },
      "MetadataFilter": {
        "required": [
          "key",
          "conditions"
        ],
        "description": "User provided filter to limit retrieval based on `Chunk` or `Document` level\nmetadata values.\nExample (genre = drama OR genre = action):\n  key = \"document.custom_metadata.genre\"\n  conditions = [{string_value = \"drama\", operation = EQUAL},\n                {string_value = \"action\", operation = EQUAL}]",
        "type": "object",
        "properties": {
          "key": {
            "description": "Required. The key of the metadata to filter on.",
            "type": "string"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/Condition"
            },
            "description": "Required. The `Condition`s for the given key that will trigger this filter. Multiple\n`Condition`s are joined by logical ORs.",
            "type": "array"
          }
        }
      },
      "StringList": {
        "type": "object",
        "description": "User provided string values assigned to a single metadata key.",
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "The string values of the metadata to store."
          }
        }
      },
      "DynamicRetrievalConfig": {
        "description": "Describes the options to customize dynamic retrieval.",
        "properties": {
          "mode": {
            "enum": [
              "MODE_UNSPECIFIED",
              "MODE_DYNAMIC"
            ],
            "x-google-enum-descriptions": [
              "Always trigger retrieval.",
              "Run retrieval only when system decides it is necessary."
            ],
            "description": "The mode of the predictor to be used in dynamic retrieval.",
            "type": "string"
          },
          "dynamicThreshold": {
            "type": "number",
            "description": "The threshold to be used in dynamic retrieval.\nIf not set, a system default value is used.",
            "format": "float"
          }
        },
        "type": "object"
      },
      "CreateTunedModelMetadata": {
        "type": "object",
        "description": "Metadata about the state and progress of creating a tuned model returned from\nthe long-running operation",
        "properties": {
          "completedSteps": {
            "type": "integer",
            "description": "The number of steps completed.",
            "format": "int32"
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TuningSnapshot"
            },
            "description": "Metrics collected during tuning."
          },
          "tunedModel": {
            "type": "string",
            "description": "Name of the tuned model associated with the tuning operation."
          },
          "completedPercent": {
            "description": "The completed percentage for the tuning operation.",
            "type": "number",
            "format": "float"
          },
          "totalSteps": {
            "description": "The total number of tuning steps.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FunctionCall": {
        "required": [
          "name"
        ],
        "description": "A predicted `FunctionCall` returned from the model that contains\na string representing the `FunctionDeclaration.name` with the\narguments and their values.",
        "properties": {
          "name": {
            "description": "Required. The name of the function to call.\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum\nlength of 63.",
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "Optional. The unique id of the function call. If populated, the client to execute the\n`function_call` and return the response with the matching `id`."
          },
          "args": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "type": "object",
            "description": "Optional. The function parameters and values in JSON object format."
          }
        },
        "type": "object"
      },
      "Segment": {
        "properties": {
          "startIndex": {
            "readOnly": true,
            "format": "int32",
            "description": "Output only. Start index in the given Part, measured in bytes. Offset from the start of\nthe Part, inclusive, starting at zero.",
            "type": "integer"
          },
          "endIndex": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "description": "Output only. End index in the given Part, measured in bytes. Offset from the start of\nthe Part, exclusive, starting at zero."
          },
          "text": {
            "description": "Output only. The text corresponding to the segment from the response.",
            "type": "string",
            "readOnly": true
          },
          "partIndex": {
            "description": "Output only. The index of a Part object within its parent Content object.",
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        },
        "description": "Segment of the content.",
        "type": "object"
      },
      "CreateChunkRequest": {
        "description": "Request to create a `Chunk`.",
        "required": [
          "parent",
          "chunk"
        ],
        "type": "object",
        "properties": {
          "parent": {
            "type": "string",
            "description": "Required. The name of the `Document` where this `Chunk` will be created.\nExample: `corpora/my-corpus-123/documents/the-doc-abc`"
          },
          "chunk": {
            "description": "Required. The `Chunk` to create.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Chunk"
              }
            ]
          }
        }
      },
      "GoogleSearch": {
        "type": "object",
        "description": "GoogleSearch tool type.\nTool to support Google Search in Model. Powered by Google.",
        "properties": {
          "timeRangeFilter": {
            "description": "Optional. Filter search results to a specific time range.\nIf customers set a start time, they must set an end time (and vice\nversa).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Interval"
              }
            ]
          }
        }
      },
      "SearchEntryPoint": {
        "description": "Google search entry point.",
        "type": "object",
        "properties": {
          "renderedContent": {
            "description": "Optional. Web content snippet that can be embedded in a web page or an app webview.",
            "type": "string"
          },
          "sdkBlob": {
            "format": "byte",
            "type": "string",
            "description": "Optional. Base64 encoded JSON representing array of  tuple."
          }
        }
      },
      "CachedContentUsageMetadata": {
        "description": "Metadata on the usage of the cached content.",
        "properties": {
          "totalTokenCount": {
            "format": "int32",
            "type": "integer",
            "description": "Total number of tokens that the cached content consumes."
          }
        },
        "type": "object"
      },
      "TextCompletion": {
        "description": "Output text returned from a model.",
        "type": "object",
        "properties": {
          "citationMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CitationMetadata"
              }
            ],
            "readOnly": true,
            "description": "Output only. Citation information for model-generated `output` in this\n`TextCompletion`.\n\nThis field may be populated with attribution information for any text\nincluded in the `output`."
          },
          "safetyRatings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyRating"
            },
            "description": "Ratings for the safety of a response.\n\nThere is at most one rating per category."
          },
          "output": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. The generated text returned from the model."
          }
        }
      },
      "CountMessageTokensRequest": {
        "description": "Counts the number of tokens in the `prompt` sent to a model.\n\nModels may tokenize text differently, so each model may return a different\n`token_count`.",
        "required": [
          "prompt"
        ],
        "properties": {
          "prompt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessagePrompt"
              }
            ],
            "description": "Required. The prompt, whose token count is to be returned."
          }
        },
        "type": "object"
      },
      "CreateFileRequest": {
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ],
            "description": "Optional. Metadata for the file to create."
          }
        },
        "description": "Request for `CreateFile`."
      },
      "Schema": {
        "type": "object",
        "description": "The `Schema` object allows the definition of input and output data types.\nThese types can be objects, but also primitives and arrays.\nRepresents a select subset of an [OpenAPI 3.0 schema\nobject](https://spec.openapis.org/oas/v3.0.3#schema).",
        "required": [
          "type"
        ],
        "properties": {
          "required": {
            "type": "array",
            "description": "Optional. Required properties of Type.OBJECT.",
            "items": {
              "type": "string"
            }
          },
          "nullable": {
            "type": "boolean",
            "description": "Optional. Indicates if the value may be null."
          },
          "example": {
            "description": "Optional. Example of the object. Will only populated when the object is the root."
          },
          "minProperties": {
            "type": "string",
            "format": "int64",
            "description": "Optional. Minimum number of the properties for Type.OBJECT."
          },
          "pattern": {
            "description": "Optional. Pattern of the Type.STRING to restrict a string to a regular expression.",
            "type": "string"
          },
          "type": {
            "description": "Required. Data type.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Type"
              }
            ]
          },
          "anyOf": {
            "description": "Optional. The value should be validated against any (one or more) of the subschemas\nin the list.",
            "items": {
              "$ref": "#/components/schemas/Schema"
            },
            "type": "array"
          },
          "enum": {
            "description": "Optional. Possible values of the element of Type.STRING with enum format.\nFor example we can define an Enum Direction as :\n{type:STRING, format:enum, enum:[\"EAST\", NORTH\", \"SOUTH\", \"WEST\"]}",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxItems": {
            "type": "string",
            "description": "Optional. Maximum number of the elements for Type.ARRAY.",
            "format": "int64"
          },
          "title": {
            "description": "Optional. The title of the schema.",
            "type": "string"
          },
          "format": {
            "description": "Optional. The format of the data. This is used only for primitive datatypes.\nSupported formats:\n for NUMBER type: float, double\n for INTEGER type: int32, int64\n for STRING type: enum, date-time",
            "type": "string"
          },
          "minimum": {
            "format": "double",
            "description": "Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER\nMinimum value of the Type.INTEGER and Type.NUMBER",
            "type": "number"
          },
          "description": {
            "type": "string",
            "description": "Optional. A brief description of the parameter. This could contain examples of use.\nParameter description may be formatted as Markdown."
          },
          "default": {
            "description": "Optional. Default value of the field. Per JSON Schema, this field is intended for\ndocumentation generators and doesn't affect validation. Thus it's included\nhere and ignored so that developers who send schemas with a `default` field\ndon't get unknown-field errors."
          },
          "maximum": {
            "format": "double",
            "description": "Optional. Maximum value of the Type.INTEGER and Type.NUMBER",
            "type": "number"
          },
          "minItems": {
            "description": "Optional. Minimum number of the elements for Type.ARRAY.",
            "format": "int64",
            "type": "string"
          },
          "maxProperties": {
            "description": "Optional. Maximum number of the properties for Type.OBJECT.",
            "type": "string",
            "format": "int64"
          },
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Schema"
            },
            "type": "object",
            "description": "Optional. Properties of Type.OBJECT."
          },
          "maxLength": {
            "type": "string",
            "description": "Optional. Maximum length of the Type.STRING",
            "format": "int64"
          },
          "items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Schema"
              }
            ],
            "description": "Optional. Schema of the elements of Type.ARRAY."
          },
          "propertyOrdering": {
            "items": {
              "type": "string"
            },
            "description": "Optional. The order of the properties.\nNot a standard field in open api spec. Used to determine the order of the\nproperties in the response.",
            "type": "array"
          },
          "minLength": {
            "format": "int64",
            "type": "string",
            "description": "Optional. SCHEMA FIELDS FOR TYPE STRING\nMinimum length of the Type.STRING"
          }
        }
      },
      "QueryCorpusResponse": {
        "type": "object",
        "description": "Response from `QueryCorpus` containing a list of relevant chunks.",
        "properties": {
          "relevantChunks": {
            "items": {
              "$ref": "#/components/schemas/RelevantChunk"
            },
            "description": "The relevant chunks.",
            "type": "array"
          }
        }
      },
      "VoiceConfig": {
        "description": "The configuration for the voice to use.",
        "type": "object",
        "properties": {
          "prebuiltVoiceConfig": {
            "description": "The configuration for the prebuilt voice to use.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PrebuiltVoiceConfig"
              }
            ]
          }
        }
      },
      "GeneratedFile": {
        "type": "object",
        "description": "A file generated on behalf of a user.",
        "properties": {
          "name": {
            "description": "Identifier. The name of the generated file.\nExample: `generatedFiles/abc-123`",
            "x-google-identifier": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the generatedFile."
          },
          "state": {
            "enum": [
              "STATE_UNSPECIFIED",
              "GENERATING",
              "GENERATED",
              "FAILED"
            ],
            "type": "string",
            "readOnly": true,
            "x-google-enum-descriptions": [
              "The default value. This value is used if the state is omitted.",
              "Being generated.",
              "Generated and is ready for download.",
              "Failed to generate the GeneratedFile."
            ],
            "description": "Output only. The state of the GeneratedFile."
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "description": "Error details if the GeneratedFile ends up in the STATE_FAILED state."
          }
        }
      },
      "SemanticRetrieverConfig": {
        "description": "Configuration for retrieving grounding content from a `Corpus` or\n`Document` created using the Semantic Retriever API.",
        "type": "object",
        "properties": {
          "minimumRelevanceScore": {
            "type": "number",
            "description": "Optional. Minimum relevance score for retrieved relevant `Chunk`s.",
            "format": "float"
          },
          "metadataFilters": {
            "items": {
              "$ref": "#/components/schemas/MetadataFilter"
            },
            "type": "array",
            "description": "Optional. Filters for selecting `Document`s and/or `Chunk`s from the resource."
          },
          "query": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ],
            "description": "Required. Query to use for matching `Chunk`s in the given resource by similarity."
          },
          "maxChunksCount": {
            "format": "int32",
            "description": "Optional. Maximum number of relevant `Chunk`s to retrieve.",
            "type": "integer"
          },
          "source": {
            "type": "string",
            "description": "Required. Name of the resource for retrieval. Example: `corpora/123` or\n`corpora/123/documents/abc`."
          }
        },
        "required": [
          "source",
          "query"
        ]
      },
      "TransferOwnershipRequest": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "description": "Required. The email address of the user to whom the tuned model is being transferred\nto.",
            "type": "string"
          }
        },
        "description": "Request to transfer the ownership of the tuned model.",
        "required": [
          "emailAddress"
        ]
      },
      "MultiSpeakerVoiceConfig": {
        "properties": {
          "speakerVoiceConfigs": {
            "items": {
              "$ref": "#/components/schemas/SpeakerVoiceConfig"
            },
            "type": "array",
            "description": "Required. All the enabled speaker voices."
          }
        },
        "required": [
          "speakerVoiceConfigs"
        ],
        "type": "object",
        "description": "The configuration for the multi-speaker setup."
      },
      "GroundingChunk": {
        "type": "object",
        "description": "Grounding chunk.",
        "properties": {
          "web": {
            "description": "Grounding chunk from the web.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Web"
              }
            ]
          }
        }
      },
      "TuningTask": {
        "description": "Tuning tasks that create tuned models.",
        "required": [
          "trainingData"
        ],
        "properties": {
          "hyperparameters": {
            "x-google-immutable": true,
            "description": "Immutable. Hyperparameters controlling the tuning process. If not provided, default\nvalues will be used.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Hyperparameters"
              }
            ]
          },
          "trainingData": {
            "writeOnly": true,
            "x-google-immutable": true,
            "description": "Required. Input only. Immutable. The model training data.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Dataset"
              }
            ]
          },
          "snapshots": {
            "description": "Output only. Metrics collected during tuning.",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TuningSnapshot"
            }
          },
          "startTime": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. The timestamp when tuning this model started.",
            "format": "date-time"
          },
          "completeTime": {
            "type": "string",
            "format": "date-time",
            "description": "Output only. The timestamp when tuning this model completed.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ListDocumentsResponse": {
        "properties": {
          "nextPageToken": {
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no more pages.",
            "type": "string"
          },
          "documents": {
            "description": "The returned `Document`s.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "type": "object",
        "description": "Response from `ListDocuments` containing a paginated list of `Document`s.\nThe `Document`s are sorted by ascending `document.create_time`."
      },
      "EmbedContentResponse": {
        "type": "object",
        "description": "The response to an `EmbedContentRequest`.",
        "properties": {
          "embedding": {
            "description": "Output only. The embedding generated from the input content.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentEmbedding"
              }
            ],
            "readOnly": true
          }
        }
      },
      "QueryCorpusRequest": {
        "properties": {
          "resultsCount": {
            "format": "int32",
            "type": "integer",
            "description": "Optional. The maximum number of `Chunk`s to return.\nThe service may return fewer `Chunk`s.\n\nIf unspecified, at most 10 `Chunk`s will be returned.\nThe maximum specified result count is 100."
          },
          "metadataFilters": {
            "type": "array",
            "description": "Optional. Filter for `Chunk` and `Document` metadata. Each `MetadataFilter` object\nshould correspond to a unique key. Multiple `MetadataFilter` objects are\njoined by logical \"AND\"s.\n\nExample query at document level:\n(year \u003e= 2020 OR year \u003c 2010) AND (genre = drama OR genre = action)\n\n`MetadataFilter` object list:\n metadata_filters = [\n {key = \"document.custom_metadata.year\"\n  conditions = [{int_value = 2020, operation = GREATER_EQUAL},\n                {int_value = 2010, operation = LESS}]},\n {key = \"document.custom_metadata.year\"\n  conditions = [{int_value = 2020, operation = GREATER_EQUAL},\n                {int_value = 2010, operation = LESS}]},\n {key = \"document.custom_metadata.genre\"\n  conditions = [{string_value = \"drama\", operation = EQUAL},\n                {string_value = \"action\", operation = EQUAL}]}]\n\nExample query at chunk level for a numeric range of values:\n(year \u003e 2015 AND year \u003c= 2020)\n\n`MetadataFilter` object list:\n metadata_filters = [\n {key = \"chunk.custom_metadata.year\"\n  conditions = [{int_value = 2015, operation = GREATER}]},\n {key = \"chunk.custom_metadata.year\"\n  conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]\n\nNote: \"AND\"s for the same key are only supported for numeric values. String\nvalues only support \"OR\"s for the same key.",
            "items": {
              "$ref": "#/components/schemas/MetadataFilter"
            }
          },
          "query": {
            "description": "Required. Query string to perform semantic search.",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "description": "Request for querying a `Corpus`.",
        "type": "object"
      },
      "ThinkingConfig": {
        "type": "object",
        "description": "Config for thinking features.",
        "properties": {
          "includeThoughts": {
            "type": "boolean",
            "description": "Indicates whether to include thoughts in the response.\nIf true, thoughts are returned only when available."
          },
          "thinkingBudget": {
            "description": "The number of thoughts tokens that the model should generate.",
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "CachedContent": {
        "properties": {
          "ttl": {
            "description": "Input only. New TTL for this resource, input only.",
            "type": "string",
            "format": "google-duration",
            "writeOnly": true
          },
          "createTime": {
            "description": "Output only. Creation time of the cache entry.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "displayName": {
            "x-google-immutable": true,
            "description": "Optional. Immutable. The user-generated meaningful display name of the cached content. Maximum\n128 Unicode characters.",
            "type": "string"
          },
          "usageMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CachedContentUsageMetadata"
              }
            ],
            "readOnly": true,
            "description": "Output only. Metadata on the usage of the cached content."
          },
          "expireTime": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp in UTC of when this resource is considered expired.\nThis is *always* provided on output, regardless of what was sent\non input."
          },
          "systemInstruction": {
            "writeOnly": true,
            "description": "Optional. Input only. Immutable. Developer set system instruction. Currently text only.",
            "x-google-immutable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ]
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "type": "array",
            "description": "Optional. Input only. Immutable. A list of `Tools` the model may use to generate the next response",
            "writeOnly": true,
            "x-google-immutable": true
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "x-google-identifier": true,
            "description": "Output only. Identifier. The resource name referring to the cached content.\nFormat: `cachedContents/{id}`"
          },
          "model": {
            "x-google-immutable": true,
            "description": "Required. Immutable. The name of the `Model` to use for cached content\nFormat: `models/{model}`",
            "type": "string"
          },
          "toolConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ToolConfig"
              }
            ],
            "description": "Optional. Input only. Immutable. Tool config. This config is shared for all tools.",
            "x-google-immutable": true,
            "writeOnly": true
          },
          "contents": {
            "type": "array",
            "description": "Optional. Input only. Immutable. The content to cache.",
            "writeOnly": true,
            "x-google-immutable": true,
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          },
          "updateTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string",
            "description": "Output only. When the cache entry was last updated in UTC time."
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "description": "Content that has been preprocessed and can be used in subsequent request\nto GenerativeService.\n\nCached content can be only used with model it was created for."
      },
      "Permission": {
        "properties": {
          "role": {
            "description": "Required. The role granted by this permission.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "OWNER",
              "WRITER",
              "READER"
            ],
            "type": "string",
            "x-google-enum-descriptions": [
              "The default value. This value is unused.",
              "Owner can use, update, share and delete the resource.",
              "Writer can use, update and share the resource.",
              "Reader can use the resource."
            ]
          },
          "emailAddress": {
            "x-google-immutable": true,
            "type": "string",
            "description": "Optional. Immutable. The email address of the user of group which this permission refers.\nField is not set when permission's grantee type is EVERYONE."
          },
          "granteeType": {
            "description": "Optional. Immutable. The type of the grantee.",
            "x-google-immutable": true,
            "type": "string",
            "x-google-enum-descriptions": [
              "The default value. This value is unused.",
              "Represents a user. When set, you must provide email_address for the user.",
              "Represents a group. When set, you must provide email_address for the\ngroup.",
              "Represents access to everyone. No extra information is required."
            ],
            "enum": [
              "GRANTEE_TYPE_UNSPECIFIED",
              "USER",
              "GROUP",
              "EVERYONE"
            ]
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "x-google-identifier": true,
            "description": "Output only. Identifier. The permission name. A unique name will be generated on create.\nExamples:\n    tunedModels/{tuned_model}/permissions/{permission}\n    corpora/{corpus}/permissions/{permission}\nOutput only."
          }
        },
        "description": "Permission resource grants user, group or the rest of the world access to the\nPaLM API resource (e.g. a tuned model, corpus).\n\nA role is a collection of permitted operations that allows users to perform\nspecific actions on PaLM API resources. To make them available to users,\ngroups, or service accounts, you assign roles. When you assign a role, you\ngrant permissions that the role contains.\n\nThere are three concentric roles. Each role is a superset of the previous\nrole's permitted operations:\n\n- reader can use the resource (e.g. tuned model, corpus) for inference\n- writer has reader's permissions and additionally can edit and share\n- owner has writer's permissions and additionally can delete",
        "type": "object",
        "required": [
          "role"
        ]
      },
      "File": {
        "description": "A file uploaded to the API.\nNext ID: 15",
        "properties": {
          "videoMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VideoFileMetadata"
              }
            ],
            "readOnly": true,
            "description": "Output only. Metadata for a video."
          },
          "mimeType": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. MIME type of the file."
          },
          "name": {
            "x-google-identifier": true,
            "x-google-immutable": true,
            "type": "string",
            "description": "Immutable. Identifier. The `File` resource name. The ID (name excluding the \"files/\" prefix) can\ncontain up to 40 characters that are lowercase alphanumeric or dashes (-).\nThe ID cannot start or end with a dash. If the name is empty on create, a\nunique name will be generated.\nExample: `files/123-456`"
          },
          "state": {
            "readOnly": true,
            "description": "Output only. Processing state of the File.",
            "type": "string",
            "x-google-enum-descriptions": [
              "The default value. This value is used if the state is omitted.",
              "File is being processed and cannot be used for inference yet.",
              "File is processed and available for inference.",
              "File failed processing."
            ],
            "enum": [
              "STATE_UNSPECIFIED",
              "PROCESSING",
              "ACTIVE",
              "FAILED"
            ]
          },
          "source": {
            "description": "Source of the File.",
            "enum": [
              "SOURCE_UNSPECIFIED",
              "UPLOADED",
              "GENERATED"
            ],
            "x-google-enum-descriptions": [
              "Used if source is not specified.",
              "Indicates the file is uploaded by the user.",
              "Indicates the file is generated by Google."
            ],
            "type": "string"
          },
          "sizeBytes": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. Size of the file in bytes.",
            "format": "int64"
          },
          "sha256Hash": {
            "description": "Output only. SHA-256 hash of the uploaded bytes.",
            "format": "byte",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ],
            "description": "Output only. Error status if File processing failed.",
            "readOnly": true
          },
          "displayName": {
            "description": "Optional. The human-readable display name for the `File`. The display name must be\nno more than 512 characters in length, including spaces.\nExample: \"Welcome Image\"",
            "type": "string"
          },
          "downloadUri": {
            "description": "Output only. The download uri of the `File`.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string",
            "description": "Output only. The timestamp of when the `File` was last updated."
          },
          "uri": {
            "readOnly": true,
            "description": "Output only. The uri of the `File`.",
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string",
            "description": "Output only. The timestamp of when the `File` was created.",
            "readOnly": true
          },
          "expirationTime": {
            "type": "string",
            "description": "Output only. The timestamp of when the `File` will be deleted. Only set if the `File` is\nscheduled to expire.",
            "readOnly": true,
            "format": "date-time"
          }
        },
        "type": "object"
      },
      "CodeExecution": {
        "description": "Tool that executes code generated by the model, and automatically returns\nthe result to the model.\n\nSee also `ExecutableCode` and `CodeExecutionResult` which are only generated\nwhen using this tool.",
        "type": "object"
      },
      "Status": {
        "properties": {
          "details": {
            "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "code": {
            "type": "integer",
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
      },
      "FunctionResponse": {
        "required": [
          "name",
          "response"
        ],
        "type": "object",
        "description": "The result output from a `FunctionCall` that contains a string\nrepresenting the `FunctionDeclaration.name` and a structured JSON\nobject containing any output from the function is used as context to\nthe model. This should contain the result of a`FunctionCall` made\nbased on model prediction.",
        "properties": {
          "name": {
            "description": "Required. The name of the function to call.\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum\nlength of 63.",
            "type": "string"
          },
          "scheduling": {
            "enum": [
              "SCHEDULING_UNSPECIFIED",
              "SILENT",
              "WHEN_IDLE",
              "INTERRUPT"
            ],
            "description": "Optional. Specifies how the response should be scheduled in the conversation.\nOnly applicable to NON_BLOCKING function calls, is ignored otherwise.\nDefaults to WHEN_IDLE.",
            "type": "string",
            "x-google-enum-descriptions": [
              "This value is unused.",
              "Only add the result to the conversation context, do not interrupt or\ntrigger generation.",
              "Add the result to the conversation context, and prompt to generate output\nwithout interrupting ongoing generation.",
              "Add the result to the conversation context, interrupt ongoing generation\nand prompt to generate output."
            ]
          },
          "willContinue": {
            "type": "boolean",
            "description": "Optional. Signals that function call continues, and more responses will be\nreturned, turning the function call into a generator.\nIs only applicable to NON_BLOCKING function calls, is ignored otherwise.\nIf set to false, future responses will not be considered.\nIt is allowed to return empty `response` with `will_continue=False` to\nsignal that the function call is finished. This may still trigger the model\ngeneration. To avoid triggering the generation and finish the function\ncall, additionally set `scheduling` to `SILENT`."
          },
          "id": {
            "description": "Optional. The id of the function call this response is for. Populated by the client\nto match the corresponding function call `id`.",
            "type": "string"
          },
          "response": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "type": "object",
            "description": "Required. The function response in JSON object format."
          }
        }
      },
      "GenerateMessageRequest": {
        "required": [
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "description": "Required. The structured textual input given to the model as a prompt.\n\nGiven a\nprompt, the model will return what it predicts is the next message in the\ndiscussion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessagePrompt"
              }
            ]
          },
          "topP": {
            "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.\n\nThe model uses combined Top-k and nucleus sampling.\n\nNucleus sampling considers the smallest set of tokens whose probability\nsum is at least `top_p`.",
            "type": "number",
            "format": "float"
          },
          "candidateCount": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The number of generated response messages to return.\n\nThis value must be between\n`[1, 8]`, inclusive. If unset, this will default to `1`."
          },
          "temperature": {
            "description": "Optional. Controls the randomness of the output.\n\nValues can range over `[0.0,1.0]`,\ninclusive. A value closer to `1.0` will produce responses that are more\nvaried, while a value closer to `0.0` will typically result in\nless surprising responses from the model.",
            "format": "float",
            "type": "number"
          },
          "topK": {
            "format": "int32",
            "type": "integer",
            "description": "Optional. The maximum number of tokens to consider when sampling.\n\nThe model uses combined Top-k and nucleus sampling.\n\nTop-k sampling considers the set of `top_k` most probable tokens."
          }
        },
        "description": "Request to generate a message response from the model."
      },
      "ModalityTokenCount": {
        "description": "Represents token counting info for a single modality.",
        "type": "object",
        "properties": {
          "tokenCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tokens."
          },
          "modality": {
            "description": "The modality associated with this token count.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Modality"
              }
            ]
          }
        }
      },
      "ListOperationsResponse": {
        "description": "The response message for Operations.ListOperations.",
        "type": "object",
        "properties": {
          "operations": {
            "description": "A list of operations that matches the specified filter in the request.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          },
          "nextPageToken": {
            "description": "The standard List next-page token.",
            "type": "string"
          }
        }
      },
      "HarmCategory": {
        "x-google-enum-descriptions": [
          "Category is unspecified.",
          "**PaLM** - Negative or harmful comments targeting identity and/or protected\nattribute.",
          "**PaLM** - Content that is rude, disrespectful, or profane.",
          "**PaLM** - Describes scenarios depicting violence against an individual or\ngroup, or general descriptions of gore.",
          "**PaLM** - Contains references to sexual acts or other lewd content.",
          "**PaLM** - Promotes unchecked medical advice.",
          "**PaLM** - Dangerous content that promotes, facilitates, or encourages\nharmful acts.",
          "**Gemini** - Harassment content.",
          "**Gemini** - Hate speech and content.",
          "**Gemini** - Sexually explicit content.",
          "**Gemini** - Dangerous content.",
          "**Gemini** - Content that may be used to harm civic integrity."
        ],
        "type": "string",
        "enum": [
          "HARM_CATEGORY_UNSPECIFIED",
          "HARM_CATEGORY_DEROGATORY",
          "HARM_CATEGORY_TOXICITY",
          "HARM_CATEGORY_VIOLENCE",
          "HARM_CATEGORY_SEXUAL",
          "HARM_CATEGORY_MEDICAL",
          "HARM_CATEGORY_DANGEROUS",
          "HARM_CATEGORY_HARASSMENT",
          "HARM_CATEGORY_HATE_SPEECH",
          "HARM_CATEGORY_SEXUALLY_EXPLICIT",
          "HARM_CATEGORY_DANGEROUS_CONTENT",
          "HARM_CATEGORY_CIVIC_INTEGRITY"
        ]
      },
      "BatchCreateChunksResponse": {
        "type": "object",
        "properties": {
          "chunks": {
            "items": {
              "$ref": "#/components/schemas/Chunk"
            },
            "type": "array",
            "description": "`Chunk`s created."
          }
        },
        "description": "Response from `BatchCreateChunks` containing a list of created `Chunk`s."
      },
      "Example": {
        "description": "An input/output example used to instruct the Model.\n\nIt demonstrates how the model should respond or format its response.",
        "required": [
          "input",
          "output"
        ],
        "type": "object",
        "properties": {
          "output": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Message"
              }
            ],
            "description": "Required. An example of what the model should output given the input."
          },
          "input": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Message"
              }
            ],
            "description": "Required. An example of an input `Message` from the user."
          }
        }
      },
      "PrebuiltVoiceConfig": {
        "type": "object",
        "description": "The configuration for the prebuilt speaker to use.",
        "properties": {
          "voiceName": {
            "description": "The name of the preset voice to use.",
            "type": "string"
          }
        }
      },
      "GenerateTextRequest": {
        "type": "object",
        "properties": {
          "prompt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TextPrompt"
              }
            ],
            "description": "Required. The free-form input text given to the model as a prompt.\n\nGiven a prompt, the model will generate a TextCompletion response it\npredicts as the completion of the input text."
          },
          "temperature": {
            "format": "float",
            "description": "Optional. Controls the randomness of the output.\nNote: The default value varies by model, see the `Model.temperature`\nattribute of the `Model` returned the `getModel` function.\n\nValues can range from [0.0,1.0],\ninclusive. A value closer to 1.0 will produce responses that are more\nvaried and creative, while a value closer to 0.0 will typically result in\nmore straightforward responses from the model.",
            "type": "number"
          },
          "candidateCount": {
            "format": "int32",
            "type": "integer",
            "description": "Optional. Number of generated responses to return.\n\nThis value must be between [1, 8], inclusive. If unset, this will default\nto 1."
          },
          "stopSequences": {
            "items": {
              "type": "string"
            },
            "description": "The set of character sequences (up to 5) that will stop output generation.\nIf specified, the API will stop at the first appearance of a stop\nsequence. The stop sequence will not be included as part of the response.",
            "type": "array"
          },
          "maxOutputTokens": {
            "format": "int32",
            "description": "Optional. The maximum number of tokens to include in a candidate.\n\nIf unset, this will default to output_token_limit specified in the `Model`\nspecification.",
            "type": "integer"
          },
          "topK": {
            "description": "Optional. The maximum number of tokens to consider when sampling.\n\nThe model uses combined Top-k and nucleus sampling.\n\nTop-k sampling considers the set of `top_k` most probable tokens.\nDefaults to 40.\n\nNote: The default value varies by model, see the `Model.top_k`\nattribute of the `Model` returned the `getModel` function.",
            "format": "int32",
            "type": "integer"
          },
          "topP": {
            "type": "number",
            "format": "float",
            "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.\n\nThe model uses combined Top-k and nucleus sampling.\n\nTokens are sorted based on their assigned probabilities so that only the\nmost likely tokens are considered. Top-k sampling directly limits the\nmaximum number of tokens to consider, while Nucleus sampling limits number\nof tokens based on the cumulative probability.\n\nNote: The default value varies by model, see the `Model.top_p`\nattribute of the `Model` returned the `getModel` function."
          },
          "safetySettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetySetting"
            },
            "description": "Optional. A list of unique `SafetySetting` instances for blocking unsafe content.\n\nthat will be enforced on the `GenerateTextRequest.prompt` and\n`GenerateTextResponse.candidates`. There should not be more than one\nsetting for each `SafetyCategory` type. The API will block any prompts and\nresponses that fail to meet the thresholds set by these settings. This list\noverrides the default settings for each `SafetyCategory` specified in the\nsafety_settings. If there is no `SafetySetting` for a given\n`SafetyCategory` provided in the list, the API will use the default safety\nsetting for that category. Harm categories HARM_CATEGORY_DEROGATORY,\nHARM_CATEGORY_TOXICITY, HARM_CATEGORY_VIOLENCE, HARM_CATEGORY_SEXUAL,\nHARM_CATEGORY_MEDICAL, HARM_CATEGORY_DANGEROUS are supported in text\nservice."
          }
        },
        "required": [
          "prompt"
        ],
        "description": "Request to generate a text completion response from the model."
      },
      "TuningExample": {
        "properties": {
          "textInput": {
            "type": "string",
            "description": "Optional. Text model input."
          },
          "output": {
            "description": "Required. The expected model output.",
            "type": "string"
          }
        },
        "required": [
          "output"
        ],
        "description": "A single example for tuning.",
        "type": "object"
      },
      "BatchEmbedContentsResponse": {
        "description": "The response to a `BatchEmbedContentsRequest`.",
        "type": "object",
        "properties": {
          "embeddings": {
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ContentEmbedding"
            },
            "description": "Output only. The embeddings for each request, in the same order as provided in the batch\nrequest."
          }
        }
      },
      "FileData": {
        "description": "URI based data.",
        "properties": {
          "fileUri": {
            "description": "Required. URI.",
            "type": "string"
          },
          "mimeType": {
            "description": "Optional. The IANA standard MIME type of the source data.",
            "type": "string"
          }
        },
        "required": [
          "fileUri"
        ],
        "type": "object"
      },
      "CreateTunedModelOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOperation"
          },
          {
            "type": "object",
            "properties": {
              "response": {
                "$ref": "#/components/schemas/TunedModel"
              },
              "metadata": {
                "$ref": "#/components/schemas/CreateTunedModelMetadata"
              }
            }
          }
        ],
        "type": "object",
        "description": "This resource represents a long-running operation where metadata and response fields are strongly typed."
      },
      "CountTokensResponse": {
        "properties": {
          "promptTokensDetails": {
            "type": "array",
            "readOnly": true,
            "description": "Output only. List of modalities that were processed in the request input.",
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            }
          },
          "totalTokens": {
            "type": "integer",
            "format": "int32",
            "description": "The number of tokens that the `Model` tokenizes the `prompt` into. Always\nnon-negative."
          },
          "cacheTokensDetails": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            },
            "description": "Output only. List of modalities that were processed in the cached content."
          },
          "cachedContentTokenCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tokens in the cached part of the prompt (the cached content)."
          }
        },
        "type": "object",
        "description": "A response from `CountTokens`.\n\nIt returns the model's `token_count` for the `prompt`."
      },
      "GroundingPassages": {
        "properties": {
          "passages": {
            "description": "List of passages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroundingPassage"
            }
          }
        },
        "description": "A repeated list of passages.",
        "type": "object"
      },
      "GroundingMetadata": {
        "type": "object",
        "properties": {
          "retrievalMetadata": {
            "description": "Metadata related to retrieval in the grounding flow.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RetrievalMetadata"
              }
            ]
          },
          "groundingSupports": {
            "description": "List of grounding support.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroundingSupport"
            }
          },
          "searchEntryPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchEntryPoint"
              }
            ],
            "description": "Optional. Google search entry for the following-up web searches."
          },
          "groundingChunks": {
            "description": "List of supporting references retrieved from specified grounding source.",
            "items": {
              "$ref": "#/components/schemas/GroundingChunk"
            },
            "type": "array"
          },
          "webSearchQueries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "Web search queries for the following-up web search."
          }
        },
        "description": "Metadata returned to client when grounding is enabled."
      },
      "SpeechConfig": {
        "type": "object",
        "properties": {
          "multiSpeakerVoiceConfig": {
            "description": "Optional. The configuration for the multi-speaker setup.\nIt is mutually exclusive with the voice_config field.",
            "allOf": [
              {
                "$ref": "#/components/schemas/MultiSpeakerVoiceConfig"
              }
            ]
          },
          "languageCode": {
            "type": "string",
            "description": "Optional. Language code (in BCP 47 format, e.g. \"en-US\") for speech synthesis.\n\nValid values are: de-DE, en-AU, en-GB, en-IN, en-US, es-US, fr-FR, hi-IN,\npt-BR, ar-XA, es-ES, fr-CA, id-ID, it-IT, ja-JP, tr-TR, vi-VN, bn-IN,\ngu-IN, kn-IN, ml-IN, mr-IN, ta-IN, te-IN, nl-NL, ko-KR, cmn-CN, pl-PL,\nru-RU, and th-TH."
          },
          "voiceConfig": {
            "description": "The configuration in case of single-voice output.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceConfig"
              }
            ]
          }
        },
        "description": "The speech generation config."
      },
      "ListModelsResponse": {
        "description": "Response from `ListModel` containing a paginated list of Models.",
        "properties": {
          "models": {
            "type": "array",
            "description": "The returned Models.",
            "items": {
              "$ref": "#/components/schemas/Model"
            }
          },
          "nextPageToken": {
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\n\nIf this field is omitted, there are no more pages.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CountTextTokensRequest": {
        "description": "Counts the number of tokens in the `prompt` sent to a model.\n\nModels may tokenize text differently, so each model may return a different\n`token_count`.",
        "properties": {
          "prompt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TextPrompt"
              }
            ],
            "description": "Required. The free-form input text given to the model as a prompt."
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ]
      },
      "ListCorporaResponse": {
        "description": "Response from `ListCorpora` containing a paginated list of `Corpora`.\nThe results are sorted by ascending `corpus.create_time`.",
        "properties": {
          "corpora": {
            "description": "The returned corpora.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Corpus"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no more pages."
          }
        },
        "type": "object"
      },
      "PredictLongRunningResponse": {
        "description": "Response message for [PredictionService.PredictLongRunning]",
        "properties": {
          "generateVideoResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerateVideoResponse"
              }
            ],
            "description": "The response of the video generation prediction."
          }
        },
        "type": "object"
      },
      "Tool": {
        "description": "Tool details that the model may use to generate response.\n\nA `Tool` is a piece of code that enables the system to interact with\nexternal systems to perform an action, or set of actions, outside of\nknowledge and scope of the model.",
        "type": "object",
        "properties": {
          "googleSearch": {
            "description": "Optional. GoogleSearch tool type.\nTool to support Google Search in Model. Powered by Google.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GoogleSearch"
              }
            ]
          },
          "urlContext": {
            "description": "Optional. Tool to support URL context retrieval.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlContext"
              }
            ]
          },
          "codeExecution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CodeExecution"
              }
            ],
            "description": "Optional. Enables the model to execute code as part of generation."
          },
          "googleSearchRetrieval": {
            "description": "Optional. Retrieval tool that is powered by Google search.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GoogleSearchRetrieval"
              }
            ]
          },
          "functionDeclarations": {
            "description": "Optional. A list of `FunctionDeclarations` available to the model that can be used\nfor function calling.\n\nThe model or system does not execute the function. Instead the defined\nfunction may be returned as a FunctionCall\nwith arguments to the client side for execution. The model may decide to\ncall a subset of these functions by populating\nFunctionCall in the response. The next\nconversation turn may contain a\nFunctionResponse\nwith the Content.role \"function\" generation context for the next model\nturn.",
            "items": {
              "$ref": "#/components/schemas/FunctionDeclaration"
            },
            "type": "array"
          }
        }
      },
      "ToolConfig": {
        "description": "The Tool configuration containing parameters for specifying `Tool` use\nin the request.",
        "type": "object",
        "properties": {
          "functionCallingConfig": {
            "description": "Optional. Function calling config.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionCallingConfig"
              }
            ]
          }
        }
      },
      "MessagePrompt": {
        "properties": {
          "messages": {
            "description": "Required. A snapshot of the recent conversation history sorted chronologically.\n\nTurns alternate between two authors.\n\nIf the total input size exceeds the model's `input_token_limit` the input\nwill be truncated: The oldest items will be dropped from `messages`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "examples": {
            "type": "array",
            "description": "Optional. Examples of what the model should generate.\n\nThis includes both user input and the response that the model should\nemulate.\n\nThese `examples` are treated identically to conversation messages except\nthat they take precedence over the history in `messages`:\nIf the total input size exceeds the model's `input_token_limit` the input\nwill be truncated. Items will be dropped from `messages` before `examples`.",
            "items": {
              "$ref": "#/components/schemas/Example"
            }
          },
          "context": {
            "description": "Optional. Text that should be provided to the model first to ground the response.\n\nIf not empty, this `context` will be given to the model first before the\n`examples` and `messages`. When using a `context` be sure to provide it\nwith every request to maintain continuity.\n\nThis field can be a description of your prompt to the model to help provide\ncontext and guide the responses. Examples: \"Translate the phrase from\nEnglish to French.\" or \"Given a statement, classify the sentiment as happy,\nsad or neutral.\"\n\nAnything included in this field will take precedence over message history\nif the total input size exceeds the model's `input_token_limit` and the\ninput request is truncated.",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "description": "All of the structured input text passed to the model as a prompt.\n\nA `MessagePrompt` contains a structured set of fields that provide context\nfor the conversation, examples of user input/model output message pairs that\nprime the model to respond in different ways, and the conversation history\nor list of messages representing the alternating turns of the conversation\nbetween the user and the model."
      },
      "GenerateContentResponse": {
        "properties": {
          "promptFeedback": {
            "description": "Returns the prompt's feedback related to the content filters.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PromptFeedback"
              }
            ]
          },
          "responseId": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. response_id is used to identify each response."
          },
          "candidates": {
            "type": "array",
            "description": "Candidate responses from the model.",
            "items": {
              "$ref": "#/components/schemas/Candidate"
            }
          },
          "modelVersion": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. The model version used to generate the response."
          },
          "usageMetadata": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UsageMetadata"
              }
            ],
            "description": "Output only. Metadata on the generation requests' token usage."
          }
        },
        "description": "Response from the model supporting multiple candidate responses.\n\nSafety ratings and content filtering are reported for both\nprompt in `GenerateContentResponse.prompt_feedback` and for each candidate\nin `finish_reason` and in `safety_ratings`. The API:\n - Returns either all requested candidates or none of them\n - Returns no candidates at all only if there was something wrong with the\n   prompt (check `prompt_feedback`)\n - Reports feedback on each candidate in `finish_reason` and\n   `safety_ratings`.",
        "type": "object"
      },
      "SafetyFeedback": {
        "properties": {
          "rating": {
            "description": "Safety rating evaluated from content.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SafetyRating"
              }
            ]
          },
          "setting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SafetySetting"
              }
            ],
            "description": "Safety settings applied to the request."
          }
        },
        "description": "Safety feedback for an entire request.\n\nThis field is populated if content in the input and/or response is blocked\ndue to safety settings. SafetyFeedback may not exist for every HarmCategory.\nEach SafetyFeedback will return the safety settings used by the request as\nwell as the lowest HarmProbability that should be allowed in order to return\na result.",
        "type": "object"
      },
      "InputFeedback": {
        "properties": {
          "blockReason": {
            "enum": [
              "BLOCK_REASON_UNSPECIFIED",
              "SAFETY",
              "OTHER"
            ],
            "x-google-enum-descriptions": [
              "Default value. This value is unused.",
              "Input was blocked due to safety reasons. Inspect\n`safety_ratings` to understand which safety category blocked it.",
              "Input was blocked due to other reasons."
            ],
            "type": "string",
            "description": "Optional. If set, the input was blocked and no candidates are returned.\nRephrase the input."
          },
          "safetyRatings": {
            "description": "Ratings for safety of the input.\nThere is at most one rating per category.",
            "items": {
              "$ref": "#/components/schemas/SafetyRating"
            },
            "type": "array"
          }
        },
        "description": "Feedback related to the input data used to answer the question, as opposed\nto the model-generated response to the question.",
        "type": "object"
      },
      "BatchEmbedTextResponse": {
        "description": "The response to a EmbedTextRequest.",
        "type": "object",
        "properties": {
          "embeddings": {
            "items": {
              "$ref": "#/components/schemas/Embedding"
            },
            "readOnly": true,
            "type": "array",
            "description": "Output only. The embeddings generated from the input text."
          }
        }
      },
      "UrlMetadata": {
        "properties": {
          "retrievedUrl": {
            "type": "string",
            "description": "Retrieved url by the tool."
          },
          "urlRetrievalStatus": {
            "enum": [
              "URL_RETRIEVAL_STATUS_UNSPECIFIED",
              "URL_RETRIEVAL_STATUS_SUCCESS",
              "URL_RETRIEVAL_STATUS_ERROR"
            ],
            "type": "string",
            "description": "Status of the url retrieval.",
            "x-google-enum-descriptions": [
              "Default value. This value is unused.",
              "Url retrieval is successful.",
              "Url retrieval is failed due to error."
            ]
          }
        },
        "description": "Context of the a single url retrieval.",
        "type": "object"
      },
      "UrlContext": {
        "type": "object",
        "description": "Tool to support URL context retrieval."
      },
      "BatchDeleteChunksRequest": {
        "description": "Request to batch delete `Chunk`s.",
        "type": "object",
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the `Chunk`s to delete.",
            "items": {
              "$ref": "#/components/schemas/DeleteChunkRequest"
            },
            "type": "array"
          }
        },
        "required": [
          "requests"
        ]
      },
      "SafetyRating": {
        "required": [
          "category",
          "probability"
        ],
        "description": "Safety rating for a piece of content.\n\nThe safety rating contains the category of harm and the\nharm probability level in that category for a piece of content.\nContent is classified for safety across a number of\nharm categories and the probability of the harm classification is included\nhere.",
        "properties": {
          "blocked": {
            "type": "boolean",
            "description": "Was this content blocked because of this rating?"
          },
          "probability": {
            "type": "string",
            "enum": [
              "HARM_PROBABILITY_UNSPECIFIED",
              "NEGLIGIBLE",
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "x-google-enum-descriptions": [
              "Probability is unspecified.",
              "Content has a negligible chance of being unsafe.",
              "Content has a low chance of being unsafe.",
              "Content has a medium chance of being unsafe.",
              "Content has a high chance of being unsafe."
            ],
            "description": "Required. The probability of harm for this content."
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HarmCategory"
              }
            ],
            "description": "Required. The category for this rating."
          }
        },
        "type": "object"
      },
      "QueryDocumentRequest": {
        "properties": {
          "metadataFilters": {
            "description": "Optional. Filter for `Chunk` metadata. Each `MetadataFilter` object should\ncorrespond to a unique key. Multiple `MetadataFilter` objects are joined by\nlogical \"AND\"s.\n\nNote: `Document`-level filtering is not supported for this request because\na `Document` name is already specified.\n\nExample query:\n(year \u003e= 2020 OR year \u003c 2010) AND (genre = drama OR genre = action)\n\n`MetadataFilter` object list:\n metadata_filters = [\n {key = \"chunk.custom_metadata.year\"\n  conditions = [{int_value = 2020, operation = GREATER_EQUAL},\n                {int_value = 2010, operation = LESS}},\n {key = \"chunk.custom_metadata.genre\"\n  conditions = [{string_value = \"drama\", operation = EQUAL},\n                {string_value = \"action\", operation = EQUAL}}]\n\nExample query for a numeric range of values:\n(year \u003e 2015 AND year \u003c= 2020)\n\n`MetadataFilter` object list:\n metadata_filters = [\n {key = \"chunk.custom_metadata.year\"\n  conditions = [{int_value = 2015, operation = GREATER}]},\n {key = \"chunk.custom_metadata.year\"\n  conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]\n\nNote: \"AND\"s for the same key are only supported for numeric values. String\nvalues only support \"OR\"s for the same key.",
            "items": {
              "$ref": "#/components/schemas/MetadataFilter"
            },
            "type": "array"
          },
          "query": {
            "type": "string",
            "description": "Required. Query string to perform semantic search."
          },
          "resultsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Optional. The maximum number of `Chunk`s to return.\nThe service may return fewer `Chunk`s.\n\nIf unspecified, at most 10 `Chunk`s will be returned.\nThe maximum specified result count is 100."
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "description": "Request for querying a `Document`."
      },
      "PredictLongRunningOperation": {
        "description": "This resource represents a long-running operation where metadata and response fields are strongly typed.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOperation"
          },
          {
            "properties": {
              "metadata": {
                "$ref": "#/components/schemas/PredictLongRunningMetadata"
              },
              "response": {
                "$ref": "#/components/schemas/PredictLongRunningResponse"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "UpdateChunkRequest": {
        "properties": {
          "chunk": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Chunk"
              }
            ],
            "description": "Required. The `Chunk` to update."
          },
          "updateMask": {
            "format": "google-fieldmask",
            "pattern": "^(\\s*[^,\\s.]+(\\s*[,.]\\s*[^,\\s.]+)*)?$",
            "type": "string",
            "description": "Required. The list of fields to update.\nCurrently, this only supports updating `custom_metadata` and `data`."
          }
        },
        "type": "object",
        "required": [
          "chunk",
          "updateMask"
        ],
        "description": "Request to update a `Chunk`."
      },
      "Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOperation"
          },
          {
            "type": "object",
            "properties": {
              "metadata": {
                "additionalProperties": {
                  "description": "Properties of the object. Contains field @type with type URL."
                },
                "type": "object",
                "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any."
              },
              "response": {
                "additionalProperties": {
                  "description": "Properties of the object. Contains field @type with type URL."
                },
                "description": "The normal, successful response of the operation.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
                "type": "object"
              }
            }
          }
        ],
        "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
        "type": "object"
      },
      "ListTunedModelsResponse": {
        "properties": {
          "tunedModels": {
            "description": "The returned Models.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TunedModel"
            }
          },
          "nextPageToken": {
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\n\nIf this field is omitted, there are no more pages.",
            "type": "string"
          }
        },
        "type": "object",
        "description": "Response from `ListTunedModels` containing a paginated list of Models."
      },
      "ExecutableCode": {
        "description": "Code generated by the model that is meant to be executed, and the result\nreturned to the model.\n\nOnly generated when using the `CodeExecution` tool, in which the code will\nbe automatically executed, and a corresponding `CodeExecutionResult` will\nalso be generated.",
        "type": "object",
        "required": [
          "language",
          "code"
        ],
        "properties": {
          "language": {
            "x-google-enum-descriptions": [
              "Unspecified language. This value should not be used.",
              "Python \u003e= 3.10, with numpy and simpy available."
            ],
            "type": "string",
            "description": "Required. Programming language of the `code`.",
            "enum": [
              "LANGUAGE_UNSPECIFIED",
              "PYTHON"
            ]
          },
          "code": {
            "description": "Required. The code to be executed.",
            "type": "string"
          }
        }
      },
      "EmbedTextResponse": {
        "type": "object",
        "description": "The response to a EmbedTextRequest.",
        "properties": {
          "embedding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Embedding"
              }
            ],
            "description": "Output only. The embedding generated from the input text.",
            "readOnly": true
          }
        }
      },
      "GroundingPassage": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the passage for attributing this passage in grounded\nanswers."
          },
          "content": {
            "description": "Content of the passage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ]
          }
        },
        "type": "object",
        "description": "Passage included inline with a grounding configuration."
      },
      "BatchEmbedTextRequest": {
        "type": "object",
        "description": "Batch request to get a text embedding from the model.",
        "properties": {
          "requests": {
            "description": "Optional. Embed requests for the batch. Only one of `texts` or `requests` can be set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmbedTextRequest"
            }
          },
          "texts": {
            "type": "array",
            "description": "Optional. The free-form input texts that the model will turn into an embedding. The\ncurrent limit is 100 texts, over which an error will be thrown.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PredictRequest": {
        "type": "object",
        "properties": {
          "instances": {
            "description": "Required. The instances that are the input to the prediction call.",
            "items": {},
            "type": "array"
          },
          "parameters": {
            "description": "Optional. The parameters that govern the prediction call."
          }
        },
        "description": "Request message for PredictionService.Predict.",
        "required": [
          "instances"
        ]
      },
      "GoogleSearchRetrieval": {
        "description": "Tool to retrieve public web data for grounding, powered by Google.",
        "properties": {
          "dynamicRetrievalConfig": {
            "description": "Specifies the dynamic retrieval configuration for the given source.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DynamicRetrievalConfig"
              }
            ]
          }
        },
        "type": "object"
      },
      "TaskType": {
        "x-google-enum-descriptions": [
          "Unset value, which will default to one of the other enum values.",
          "Specifies the given text is a query in a search/retrieval setting.",
          "Specifies the given text is a document from the corpus being searched.",
          "Specifies the given text will be used for STS.",
          "Specifies that the given text will be classified.",
          "Specifies that the embeddings will be used for clustering.",
          "Specifies that the given text will be used for question answering.",
          "Specifies that the given text will be used for fact verification.",
          "Specifies that the given text will be used for code retrieval."
        ],
        "enum": [
          "TASK_TYPE_UNSPECIFIED",
          "RETRIEVAL_QUERY",
          "RETRIEVAL_DOCUMENT",
          "SEMANTIC_SIMILARITY",
          "CLASSIFICATION",
          "CLUSTERING",
          "QUESTION_ANSWERING",
          "FACT_VERIFICATION",
          "CODE_RETRIEVAL_QUERY"
        ],
        "type": "string"
      },
      "GenerationConfig": {
        "properties": {
          "maxOutputTokens": {
            "description": "Optional. The maximum number of tokens to include in a response candidate.\n\nNote: The default value varies by model, see the `Model.output_token_limit`\nattribute of the `Model` returned from the `getModel` function.",
            "format": "int32",
            "type": "integer"
          },
          "presencePenalty": {
            "format": "float",
            "type": "number",
            "description": "Optional. Presence penalty applied to the next token's logprobs if the token has\nalready been seen in the response.\n\nThis penalty is binary on/off and not dependant on the number of times the\ntoken is used (after the first). Use\nfrequency_penalty\nfor a penalty that increases with each use.\n\nA positive penalty will discourage the use of tokens that have already\nbeen used in the response, increasing the vocabulary.\n\nA negative penalty will encourage the use of tokens that have already been\nused in the response, decreasing the vocabulary."
          },
          "stopSequences": {
            "items": {
              "type": "string"
            },
            "description": "Optional. The set of character sequences (up to 5) that will stop output generation.\nIf specified, the API will stop at the first appearance of a\n`stop_sequence`. The stop sequence will not be included as part of the\nresponse.",
            "type": "array"
          },
          "candidateCount": {
            "description": "Optional. Number of generated responses to return. If unset, this will default\nto 1. Please note that this doesn't work for previous generation\nmodels (Gemini 1.0 family)",
            "type": "integer",
            "format": "int32"
          },
          "enableEnhancedCivicAnswers": {
            "type": "boolean",
            "description": "Optional. Enables enhanced civic answers. It may not be available for all models."
          },
          "responseMimeType": {
            "type": "string",
            "description": "Optional. MIME type of the generated candidate text.\nSupported MIME types are:\n`text/plain`: (default) Text output.\n`application/json`: JSON response in the response candidates.\n`text/x.enum`: ENUM as a string response in the response candidates.\nRefer to the\n[docs](https://ai.google.dev/gemini-api/docs/prompting_with_media#plain_text_formats)\nfor a list of all supported text MIME types."
          },
          "temperature": {
            "format": "float",
            "type": "number",
            "description": "Optional. Controls the randomness of the output.\n\nNote: The default value varies by model, see the `Model.temperature`\nattribute of the `Model` returned from the `getModel` function.\n\nValues can range from [0.0, 2.0]."
          },
          "frequencyPenalty": {
            "format": "float",
            "description": "Optional. Frequency penalty applied to the next token's logprobs, multiplied by the\nnumber of times each token has been seen in the respponse so far.\n\nA positive penalty will discourage the use of tokens that have already\nbeen used, proportional to the number of times the token has been used:\nThe more a token is used, the more difficult it is for the model to use\nthat token again increasing the vocabulary of responses.\n\nCaution: A _negative_ penalty will encourage the model to reuse tokens\nproportional to the number of times the token has been used. Small\nnegative values will reduce the vocabulary of a response. Larger negative\nvalues will cause the model to start repeating a common token  until it\nhits the max_output_tokens\nlimit.",
            "type": "number"
          },
          "responseModalities": {
            "description": "Optional. The requested modalities of the response. Represents the set of modalities\nthat the model can return, and should be expected in the response. This is\nan exact match to the modalities of the response.\n\nA model may have multiple combinations of supported modalities. If the\nrequested modalities do not match any of the supported combinations, an\nerror will be returned.\n\nAn empty list is equivalent to requesting only text.",
            "type": "array",
            "items": {
              "type": "string",
              "x-google-enum-descriptions": [
                "Default value.",
                "Indicates the model should return text.",
                "Indicates the model should return images.",
                "Indicates the model should return audio."
              ],
              "enum": [
                "MODALITY_UNSPECIFIED",
                "TEXT",
                "IMAGE",
                "AUDIO"
              ]
            }
          },
          "responseLogprobs": {
            "type": "boolean",
            "description": "Optional. If true, export the logprobs results in response."
          },
          "responseJsonSchema": {
            "description": "Optional. Output schema of the generated response. This is an alternative to\n`response_schema` that accepts [JSON Schema](https://json-schema.org/).\n\nIf set, `response_schema` must be omitted, but `response_mime_type` is\nrequired.\n\nWhile the full JSON Schema may be sent, not all features are supported.\nSpecifically, only the following properties are supported:\n\n- `$id`\n- `$defs`\n- `$ref`\n- `$anchor`\n- `type`\n- `format`\n- `title`\n- `description`\n- `enum` (for strings and numbers)\n- `items`\n- `prefixItems`\n- `minItems`\n- `maxItems`\n- `minimum`\n- `maximum`\n- `anyOf`\n- `oneOf` (interpreted the same as `anyOf`)\n- `properties`\n- `additionalProperties`\n- `required`\n\nThe non-standard `propertyOrdering` property may also be set.\n\nCyclic references are unrolled to a limited degree and, as such, may only\nbe used within non-required properties. (Nullable properties are not\nsufficient.) If `$ref` is set on a sub-schema, no other properties, except\nfor than those starting as a `$`, may be set."
          },
          "seed": {
            "type": "integer",
            "description": "Optional. Seed used in decoding. If not set, the request uses a randomly generated\nseed.",
            "format": "int32"
          },
          "topP": {
            "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.\n\nThe model uses combined Top-k and Top-p (nucleus) sampling.\n\nTokens are sorted based on their assigned probabilities so that only the\nmost likely tokens are considered. Top-k sampling directly limits the\nmaximum number of tokens to consider, while Nucleus sampling limits the\nnumber of tokens based on the cumulative probability.\n\nNote: The default value varies by `Model` and is specified by\nthe`Model.top_p` attribute returned from the `getModel` function. An empty\n`top_k` attribute indicates that the model doesn't apply top-k sampling\nand doesn't allow setting `top_k` on requests.",
            "type": "number",
            "format": "float"
          },
          "speechConfig": {
            "description": "Optional. The speech generation config.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SpeechConfig"
              }
            ]
          },
          "thinkingConfig": {
            "description": "Optional. Config for thinking features.\nAn error will be returned if this field is set for models that don't\nsupport thinking.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ThinkingConfig"
              }
            ]
          },
          "mediaResolution": {
            "type": "string",
            "x-google-enum-descriptions": [
              "Media resolution has not been set.",
              "Media resolution set to low (64 tokens).",
              "Media resolution set to medium (256 tokens).",
              "Media resolution set to high (zoomed reframing with 256 tokens)."
            ],
            "description": "Optional. If specified, the media resolution specified will be used.",
            "enum": [
              "MEDIA_RESOLUTION_UNSPECIFIED",
              "MEDIA_RESOLUTION_LOW",
              "MEDIA_RESOLUTION_MEDIUM",
              "MEDIA_RESOLUTION_HIGH"
            ]
          },
          "responseSchema": {
            "description": "Optional. Output schema of the generated candidate text. Schemas must be a\nsubset of the [OpenAPI schema](https://spec.openapis.org/oas/v3.0.3#schema)\nand can be objects, primitives or arrays.\n\nIf set, a compatible `response_mime_type` must also be set.\nCompatible MIME types:\n`application/json`: Schema for JSON response.\nRefer to the [JSON text generation\nguide](https://ai.google.dev/gemini-api/docs/json-mode) for more details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Schema"
              }
            ]
          },
          "logprobs": {
            "description": "Optional. Only valid if response_logprobs=True.\nThis sets the number of top logprobs to return at each decoding step in the\nCandidate.logprobs_result.",
            "type": "integer",
            "format": "int32"
          },
          "topK": {
            "type": "integer",
            "description": "Optional. The maximum number of tokens to consider when sampling.\n\nGemini models use Top-p (nucleus) sampling or a combination of Top-k and\nnucleus sampling. Top-k sampling considers the set of `top_k` most probable\ntokens. Models running with nucleus sampling don't allow top_k setting.\n\nNote: The default value varies by `Model` and is specified by\nthe`Model.top_p` attribute returned from the `getModel` function. An empty\n`top_k` attribute indicates that the model doesn't apply top-k sampling\nand doesn't allow setting `top_k` on requests.",
            "format": "int32"
          }
        },
        "description": "Configuration options for model generation and outputs. Not all parameters\nare configurable for every model.",
        "type": "object"
      },
      "CitationMetadata": {
        "type": "object",
        "description": "A collection of source attributions for a piece of content.",
        "properties": {
          "citationSources": {
            "description": "Citations to sources for a specific response.",
            "items": {
              "$ref": "#/components/schemas/CitationSource"
            },
            "type": "array"
          }
        }
      },
      "CodeExecutionResult": {
        "description": "Result of executing the `ExecutableCode`.\n\nOnly generated when using the `CodeExecution`, and always follows a `part`\ncontaining the `ExecutableCode`.",
        "type": "object",
        "required": [
          "outcome"
        ],
        "properties": {
          "outcome": {
            "x-google-enum-descriptions": [
              "Unspecified status. This value should not be used.",
              "Code execution completed successfully.",
              "Code execution finished but with a failure. `stderr` should contain the\nreason.",
              "Code execution ran for too long, and was cancelled. There may or may not\nbe a partial output present."
            ],
            "description": "Required. Outcome of the code execution.",
            "type": "string",
            "enum": [
              "OUTCOME_UNSPECIFIED",
              "OUTCOME_OK",
              "OUTCOME_FAILED",
              "OUTCOME_DEADLINE_EXCEEDED"
            ]
          },
          "output": {
            "type": "string",
            "description": "Optional. Contains stdout when code execution is successful, stderr or other\ndescription otherwise."
          }
        }
      },
      "Condition": {
        "properties": {
          "stringValue": {
            "description": "The string value to filter the metadata on.",
            "type": "string"
          },
          "numericValue": {
            "format": "float",
            "description": "The numeric value to filter the metadata on.",
            "type": "number"
          },
          "operation": {
            "description": "Required. Operator applied to the given key-value pair to trigger the condition.",
            "enum": [
              "OPERATOR_UNSPECIFIED",
              "LESS",
              "LESS_EQUAL",
              "EQUAL",
              "GREATER_EQUAL",
              "GREATER",
              "NOT_EQUAL",
              "INCLUDES",
              "EXCLUDES"
            ],
            "type": "string",
            "x-google-enum-descriptions": [
              "The default value. This value is unused.",
              "Supported by numeric.",
              "Supported by numeric.",
              "Supported by numeric & string.",
              "Supported by numeric.",
              "Supported by numeric.",
              "Supported by numeric & string.",
              "Supported by string only when `CustomMetadata` value type for the given\nkey has a `string_list_value`.",
              "Supported by string only when `CustomMetadata` value type for the given\nkey has a `string_list_value`."
            ]
          }
        },
        "description": "Filter condition applicable to a single key.",
        "required": [
          "operation"
        ],
        "type": "object"
      },
      "CountMessageTokensResponse": {
        "type": "object",
        "properties": {
          "tokenCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of tokens that the `model` tokenizes the `prompt` into.\n\nAlways non-negative."
          }
        },
        "description": "A response from `CountMessageTokens`.\n\nIt returns the model's `token_count` for the `prompt`."
      },
      "ContentEmbedding": {
        "description": "A list of floats representing an embedding.",
        "type": "object",
        "properties": {
          "values": {
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array",
            "description": "The embedding values."
          }
        }
      },
      "Empty": {
        "type": "object",
        "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }"
      },
      "DownloadFileResponse": {
        "description": "Response for `DownloadFile`.",
        "type": "object"
      },
      "Content": {
        "description": "The base structured datatype containing multi-part content of a message.\n\nA `Content` includes a `role` field designating the producer of the `Content`\nand a `parts` field containing multi-part data that contains the content of\nthe message turn.",
        "properties": {
          "role": {
            "description": "Optional. The producer of the content. Must be either 'user' or 'model'.\n\nUseful to set for multi-turn conversations, otherwise can be left blank\nor unset.",
            "type": "string"
          },
          "parts": {
            "description": "Ordered `Parts` that constitute a single message. Parts may have different\nMIME types.",
            "items": {
              "$ref": "#/components/schemas/Part"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PromptFeedback": {
        "properties": {
          "safetyRatings": {
            "description": "Ratings for safety of the prompt.\nThere is at most one rating per category.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyRating"
            }
          },
          "blockReason": {
            "description": "Optional. If set, the prompt was blocked and no candidates are returned.\nRephrase the prompt.",
            "x-google-enum-descriptions": [
              "Default value. This value is unused.",
              "Prompt was blocked due to safety reasons. Inspect `safety_ratings`\nto understand which safety category blocked it.",
              "Prompt was blocked due to unknown reasons.",
              "Prompt was blocked due to the terms which are included from the\nterminology blocklist.",
              "Prompt was blocked due to prohibited content.",
              "Candidates blocked due to unsafe image generation content."
            ],
            "enum": [
              "BLOCK_REASON_UNSPECIFIED",
              "SAFETY",
              "OTHER",
              "BLOCKLIST",
              "PROHIBITED_CONTENT",
              "IMAGE_SAFETY"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "description": "A set of the feedback metadata the prompt specified in\n`GenerateContentRequest.content`."
      },
      "PredictLongRunningRequest": {
        "properties": {
          "parameters": {
            "description": "Optional. The parameters that govern the prediction call."
          },
          "instances": {
            "description": "Required. The instances that are the input to the prediction call.",
            "type": "array",
            "items": {}
          }
        },
        "description": "Request message for [PredictionService.PredictLongRunning].",
        "required": [
          "instances"
        ],
        "type": "object"
      },
      "TunedModelSource": {
        "type": "object",
        "description": "Tuned model as a source for training a new model.",
        "properties": {
          "tunedModel": {
            "type": "string",
            "x-google-immutable": true,
            "description": "Immutable. The name of the `TunedModel` to use as the starting point for\ntraining the new model.\nExample: `tunedModels/my-tuned-model`"
          },
          "baseModel": {
            "readOnly": true,
            "description": "Output only. The name of the base `Model` this `TunedModel` was tuned from.\nExample: `models/gemini-1.5-flash-001`",
            "type": "string"
          }
        }
      },
      "LogprobsResult": {
        "type": "object",
        "description": "Logprobs Result",
        "properties": {
          "topCandidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopCandidates"
            },
            "description": "Length = total number of decoding steps."
          },
          "chosenCandidates": {
            "type": "array",
            "description": "Length = total number of decoding steps.\nThe chosen candidates may or may not be in top_candidates.",
            "items": {
              "$ref": "#/components/schemas/LogprobsResultCandidate"
            }
          }
        }
      },
      "ListChunksResponse": {
        "type": "object",
        "properties": {
          "chunks": {
            "items": {
              "$ref": "#/components/schemas/Chunk"
            },
            "type": "array",
            "description": "The returned `Chunk`s."
          },
          "nextPageToken": {
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no more pages.",
            "type": "string"
          }
        },
        "description": "Response from `ListChunks` containing a paginated list of `Chunk`s.\nThe `Chunk`s are sorted by ascending `chunk.create_time`."
      },
      "CustomMetadata": {
        "required": [
          "key"
        ],
        "properties": {
          "stringValue": {
            "type": "string",
            "description": "The string value of the metadata to store."
          },
          "key": {
            "description": "Required. The key of the metadata to store.",
            "type": "string"
          },
          "stringListValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StringList"
              }
            ],
            "description": "The StringList value of the metadata to store."
          },
          "numericValue": {
            "format": "float",
            "description": "The numeric value of the metadata to store.",
            "type": "number"
          }
        },
        "type": "object",
        "description": "User provided metadata stored as key-value pairs."
      },
      "GenerateAnswerRequest": {
        "type": "object",
        "required": [
          "contents",
          "answerStyle"
        ],
        "description": "Request to generate a grounded answer from the `Model`.",
        "properties": {
          "safetySettings": {
            "items": {
              "$ref": "#/components/schemas/SafetySetting"
            },
            "description": "Optional. A list of unique `SafetySetting` instances for blocking unsafe content.\n\nThis will be enforced on the `GenerateAnswerRequest.contents` and\n`GenerateAnswerResponse.candidate`. There should not be more than one\nsetting for each `SafetyCategory` type. The API will block any contents and\nresponses that fail to meet the thresholds set by these settings. This list\noverrides the default settings for each `SafetyCategory` specified in the\nsafety_settings. If there is no `SafetySetting` for a given\n`SafetyCategory` provided in the list, the API will use the default safety\nsetting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH,\nHARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT,\nHARM_CATEGORY_HARASSMENT are supported.\nRefer to the\n[guide](https://ai.google.dev/gemini-api/docs/safety-settings)\nfor detailed information on available safety settings. Also refer to the\n[Safety guidance](https://ai.google.dev/gemini-api/docs/safety-guidance) to\nlearn how to incorporate safety considerations in your AI applications.",
            "type": "array"
          },
          "semanticRetriever": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SemanticRetrieverConfig"
              }
            ],
            "description": "Content retrieved from resources created via the Semantic Retriever\nAPI."
          },
          "inlinePassages": {
            "description": "Passages provided inline with the request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroundingPassages"
              }
            ]
          },
          "temperature": {
            "type": "number",
            "description": "Optional. Controls the randomness of the output.\n\nValues can range from [0.0,1.0], inclusive. A value closer to 1.0 will\nproduce responses that are more varied and creative, while a value closer\nto 0.0 will typically result in more straightforward responses from the\nmodel. A low temperature (~0.2) is usually recommended for\nAttributed-Question-Answering use cases.",
            "format": "float"
          },
          "answerStyle": {
            "type": "string",
            "x-google-enum-descriptions": [
              "Unspecified answer style.",
              "Succint but abstract style.",
              "Very brief and extractive style.",
              "Verbose style including extra details. The response may be formatted as a\nsentence, paragraph, multiple paragraphs, or bullet points, etc."
            ],
            "enum": [
              "ANSWER_STYLE_UNSPECIFIED",
              "ABSTRACTIVE",
              "EXTRACTIVE",
              "VERBOSE"
            ],
            "description": "Required. Style in which answers should be returned."
          },
          "contents": {
            "description": "Required. The content of the current conversation with the `Model`. For single-turn\nqueries, this is a single question to answer. For multi-turn queries, this\nis a repeated field that contains conversation history and the last\n`Content` in the list containing the question.\n\nNote: `GenerateAnswer` only supports queries in English.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          }
        }
      },
      "GenerateContentRequest": {
        "description": "Request to generate a completion from the model.\nNEXT ID: 14",
        "properties": {
          "tools": {
            "description": "Optional. A list of `Tools` the `Model` may use to generate the next response.\n\nA `Tool` is a piece of code that enables the system to interact with\nexternal systems to perform an action, or set of actions, outside of\nknowledge and scope of the `Model`. Supported `Tool`s are `Function` and\n`code_execution`. Refer to the [Function\ncalling](https://ai.google.dev/gemini-api/docs/function-calling) and the\n[Code execution](https://ai.google.dev/gemini-api/docs/code-execution)\nguides to learn more.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tool"
            }
          },
          "cachedContent": {
            "type": "string",
            "description": "Optional. The name of the content\n[cached](https://ai.google.dev/gemini-api/docs/caching) to use as context\nto serve the prediction. Format: `cachedContents/{cachedContent}`"
          },
          "systemInstruction": {
            "description": "Optional. Developer set [system\ninstruction(s)](https://ai.google.dev/gemini-api/docs/system-instructions).\nCurrently, text only.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ]
          },
          "safetySettings": {
            "items": {
              "$ref": "#/components/schemas/SafetySetting"
            },
            "description": "Optional. A list of unique `SafetySetting` instances for blocking unsafe content.\n\nThis will be enforced on the `GenerateContentRequest.contents` and\n`GenerateContentResponse.candidates`. There should not be more than one\nsetting for each `SafetyCategory` type. The API will block any contents and\nresponses that fail to meet the thresholds set by these settings. This list\noverrides the default settings for each `SafetyCategory` specified in the\nsafety_settings. If there is no `SafetySetting` for a given\n`SafetyCategory` provided in the list, the API will use the default safety\nsetting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH,\nHARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT,\nHARM_CATEGORY_HARASSMENT, HARM_CATEGORY_CIVIC_INTEGRITY are supported.\nRefer to the [guide](https://ai.google.dev/gemini-api/docs/safety-settings)\nfor detailed information on available safety settings. Also refer to the\n[Safety guidance](https://ai.google.dev/gemini-api/docs/safety-guidance) to\nlearn how to incorporate safety considerations in your AI applications.",
            "type": "array"
          },
          "contents": {
            "description": "Required. The content of the current conversation with the model.\n\nFor single-turn queries, this is a single instance. For multi-turn queries\nlike [chat](https://ai.google.dev/gemini-api/docs/text-generation#chat),\nthis is a repeated field that contains the conversation history and the\nlatest request.",
            "items": {
              "$ref": "#/components/schemas/Content"
            },
            "type": "array"
          },
          "generationConfig": {
            "description": "Optional. Configuration options for model generation and outputs.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GenerationConfig"
              }
            ]
          },
          "model": {
            "type": "string",
            "description": "Required. The name of the `Model` to use for generating the completion.\n\nFormat: `models/{model}`."
          },
          "toolConfig": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ToolConfig"
              }
            ],
            "description": "Optional. Tool configuration for any `Tool` specified in the request. Refer to the\n[Function calling\nguide](https://ai.google.dev/gemini-api/docs/function-calling#function_calling_mode)\nfor a usage example."
          }
        },
        "required": [
          "model",
          "contents"
        ],
        "type": "object"
      },
      "Chunk": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "customMetadata": {
            "items": {
              "$ref": "#/components/schemas/CustomMetadata"
            },
            "type": "array",
            "description": "Optional. User provided custom metadata stored as key-value pairs.\nThe maximum number of `CustomMetadata` per chunk is 20."
          },
          "state": {
            "enum": [
              "STATE_UNSPECIFIED",
              "STATE_PENDING_PROCESSING",
              "STATE_ACTIVE",
              "STATE_FAILED"
            ],
            "description": "Output only. Current state of the `Chunk`.",
            "x-google-enum-descriptions": [
              "The default value. This value is used if the state is omitted.",
              "`Chunk` is being processed (embedding and vector storage).",
              "`Chunk` is processed and available for querying.",
              "`Chunk` failed processing."
            ],
            "type": "string",
            "readOnly": true
          },
          "updateTime": {
            "readOnly": true,
            "format": "date-time",
            "type": "string",
            "description": "Output only. The Timestamp of when the `Chunk` was last updated."
          },
          "createTime": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "description": "Output only. The Timestamp of when the `Chunk` was created."
          },
          "name": {
            "x-google-identifier": true,
            "x-google-immutable": true,
            "type": "string",
            "description": "Immutable. Identifier. The `Chunk` resource name. The ID (name excluding the\n\"corpora/*/documents/*/chunks/\" prefix) can contain up to 40 characters\nthat are lowercase alphanumeric or dashes (-). The ID cannot start or end\nwith a dash. If the name is empty on create, a random 12-character unique\nID will be generated.\nExample: `corpora/{corpus_id}/documents/{document_id}/chunks/123a456b789c`"
          },
          "data": {
            "description": "Required. The content for the `Chunk`, such as the text string.\nThe maximum number of tokens per chunk is 2043.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChunkData"
              }
            ]
          }
        },
        "description": "A `Chunk` is a subpart of a `Document` that is treated as an independent unit\nfor the purposes of vector representation and storage.\nA `Corpus` can have a maximum of 1 million `Chunk`s."
      },
      "PredictLongRunningMetadata": {
        "type": "object",
        "description": "Metadata for PredictLongRunning long running operations."
      },
      "BaseOperation": {
        "properties": {
          "done": {
            "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
            "type": "boolean"
          },
          "error": {
            "description": "The error result of the operation in case of failure or cancellation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Status"
              }
            ]
          },
          "name": {
            "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
            "type": "string"
          }
        },
        "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
        "type": "object"
      },
      "QueryDocumentResponse": {
        "type": "object",
        "properties": {
          "relevantChunks": {
            "items": {
              "$ref": "#/components/schemas/RelevantChunk"
            },
            "description": "The returned relevant chunks.",
            "type": "array"
          }
        },
        "description": "Response from `QueryDocument` containing a list of relevant chunks."
      },
      "Interval": {
        "type": "object",
        "properties": {
          "startTime": {
            "description": "Optional. Inclusive start of the interval.\n\nIf specified, a Timestamp matching this interval will have to be the same\nor after the start.",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. Exclusive end of the interval.\n\nIf specified, a Timestamp matching this interval will have to be before the\nend."
          }
        },
        "description": "Represents a time interval, encoded as a Timestamp start (inclusive) and a\nTimestamp end (exclusive).\n\nThe start must be less than or equal to the end.\nWhen the start equals the end, the interval is empty (matches no time).\nWhen both start and end are unspecified, the interval matches any time."
      },
      "Model": {
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. The resource name of the `Model`. Refer to [Model\nvariants](https://ai.google.dev/gemini-api/docs/models/gemini#model-variations)\nfor all allowed values.\n\nFormat: `models/{model}` with a `{model}` naming convention of:\n\n* \"{base_model_id}-{version}\"\n\nExamples:\n\n* `models/gemini-1.5-flash-001`"
          },
          "displayName": {
            "type": "string",
            "description": "The human-readable name of the model. E.g. \"Gemini 1.5 Flash\".\n\nThe name can be up to 128 characters long and can consist of any UTF-8\ncharacters."
          },
          "topK": {
            "description": "For Top-k sampling.\n\nTop-k sampling considers the set of `top_k` most probable tokens.\nThis value specifies default to be used by the backend while making the\ncall to the model.\nIf empty, indicates the model doesn't use top-k sampling, and `top_k` isn't\nallowed as a generation parameter.",
            "format": "int32",
            "type": "integer"
          },
          "supportedGenerationMethods": {
            "description": "The model's supported generation methods.\n\nThe corresponding API method names are defined as Pascal case\nstrings, such as `generateMessage` and `generateContent`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxTemperature": {
            "description": "The maximum temperature this model can use.",
            "format": "float",
            "type": "number"
          },
          "temperature": {
            "description": "Controls the randomness of the output.\n\nValues can range over `[0.0,max_temperature]`, inclusive. A higher value\nwill produce responses that are more varied, while a value closer to `0.0`\nwill typically result in less surprising responses from the model.\nThis value specifies default to be used by the backend while making the\ncall to the model.",
            "format": "float",
            "type": "number"
          },
          "thinking": {
            "description": "Whether the model supports thinking.",
            "type": "boolean"
          },
          "outputTokenLimit": {
            "format": "int32",
            "description": "Maximum number of output tokens available for this model.",
            "type": "integer"
          },
          "inputTokenLimit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of input tokens allowed for this model."
          },
          "topP": {
            "format": "float",
            "type": "number",
            "description": "For [Nucleus\nsampling](https://ai.google.dev/gemini-api/docs/prompting-strategies#top-p).\n\nNucleus sampling considers the smallest set of tokens whose probability\nsum is at least `top_p`.\nThis value specifies default to be used by the backend while making the\ncall to the model."
          },
          "version": {
            "description": "Required. The version number of the model.\n\nThis represents the major version (`1.0` or `1.5`)",
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "A short description of the model."
          },
          "baseModelId": {
            "description": "Required. The name of the base model, pass this to the generation request.\n\nExamples:\n\n* `gemini-1.5-flash`",
            "type": "string"
          }
        },
        "type": "object",
        "description": "Information about a Generative Language Model.",
        "required": [
          "name",
          "baseModelId",
          "version"
        ]
      },
      "TunedModel": {
        "description": "A fine-tuned model created using ModelService.CreateTunedModel.",
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "format": "float",
            "description": "Optional. Controls the randomness of the output.\n\nValues can range over `[0.0,1.0]`, inclusive. A value closer to `1.0` will\nproduce responses that are more varied, while a value closer to `0.0` will\ntypically result in less surprising responses from the model.\n\nThis value specifies default to be the one used by the base model while\ncreating the model."
          },
          "tuningTask": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TuningTask"
              }
            ],
            "description": "Required. The tuning task that creates the tuned model."
          },
          "tunedModelSource": {
            "description": "Optional. TunedModel to use as the starting point for training the new model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TunedModelSource"
              }
            ]
          },
          "topP": {
            "description": "Optional. For Nucleus sampling.\n\nNucleus sampling considers the smallest set of tokens whose probability\nsum is at least `top_p`.\n\nThis value specifies default to be the one used by the base model while\ncreating the model.",
            "type": "number",
            "format": "float"
          },
          "state": {
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "FAILED"
            ],
            "readOnly": true,
            "description": "Output only. The state of the tuned model.",
            "x-google-enum-descriptions": [
              "The default value. This value is unused.",
              "The model is being created.",
              "The model is ready to be used.",
              "The model failed to be created."
            ],
            "type": "string"
          },
          "baseModel": {
            "x-google-immutable": true,
            "description": "Immutable. The name of the `Model` to tune.\nExample: `models/gemini-1.5-flash-001`",
            "type": "string"
          },
          "description": {
            "description": "Optional. A short description of this model.",
            "type": "string"
          },
          "readerProjectNumbers": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array",
            "description": "Optional. List of project numbers that have read access to the tuned model."
          },
          "createTime": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. The timestamp when this model was created.",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Output only. The tuned model name. A unique name will be generated on create.\nExample: `tunedModels/az2mb0bpw6i`\nIf display_name is set on create, the id portion of the name will be set\nby concatenating the words of the display_name with hyphens and adding a\nrandom portion for uniqueness.\n\nExample:\n\n * display_name = `Sentence Translator`\n * name = `tunedModels/sentence-translator-u3b7m`"
          },
          "displayName": {
            "description": "Optional. The name to display for this model in user interfaces.\nThe display name must be up to 40 characters including spaces.",
            "type": "string"
          },
          "updateTime": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. The timestamp when this model was updated.",
            "format": "date-time"
          },
          "topK": {
            "format": "int32",
            "type": "integer",
            "description": "Optional. For Top-k sampling.\n\nTop-k sampling considers the set of `top_k` most probable tokens.\nThis value specifies default to be used by the backend while making the\ncall to the model.\n\nThis value specifies default to be the one used by the base model while\ncreating the model."
          }
        },
        "required": [
          "tuningTask"
        ]
      },
      "GenerateAnswerResponse": {
        "description": "Response from the model for a grounded answer.",
        "properties": {
          "answerableProbability": {
            "description": "Output only. The model's estimate of the probability that its answer is correct and\ngrounded in the input passages.\n\nA low `answerable_probability` indicates that the answer might not be\ngrounded in the sources.\n\nWhen `answerable_probability` is low, you may want to:\n\n* Display a message to the effect of \"We couldn’t answer that question\" to\nthe user.\n* Fall back to a general-purpose LLM that answers the question from world\nknowledge. The threshold and nature of such fallbacks will depend on\nindividual use cases. `0.5` is a good starting threshold.",
            "type": "number",
            "readOnly": true,
            "format": "float"
          },
          "answer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Candidate"
              }
            ],
            "description": "Candidate answer from the model.\n\nNote: The model *always* attempts to provide a grounded answer, even when\nthe answer is unlikely to be answerable from the given passages.\nIn that case, a low-quality or ungrounded answer may be provided, along\nwith a low `answerable_probability`."
          },
          "inputFeedback": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InputFeedback"
              }
            ],
            "readOnly": true,
            "description": "Output only. Feedback related to the input data used to answer the question, as opposed\nto the model-generated response to the question.\n\nThe input data can be one or more of the following:\n\n- Question specified by the last entry in `GenerateAnswerRequest.content`\n- Conversation history specified by the other entries in\n`GenerateAnswerRequest.content`\n- Grounding sources (`GenerateAnswerRequest.semantic_retriever` or\n`GenerateAnswerRequest.inline_passages`)"
          }
        },
        "type": "object"
      },
      "GenerateMessageResponse": {
        "properties": {
          "filters": {
            "items": {
              "$ref": "#/components/schemas/ContentFilter"
            },
            "type": "array",
            "description": "A set of content filtering metadata for the prompt and response\ntext.\n\nThis indicates which `SafetyCategory`(s) blocked a\ncandidate from this response, the lowest `HarmProbability`\nthat triggered a block, and the HarmThreshold setting for that category."
          },
          "candidates": {
            "description": "Candidate response messages from the model.",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array",
            "description": "The conversation history used by the model."
          }
        },
        "type": "object",
        "description": "The response from the model.\n\nThis includes candidate messages and\nconversation history in the form of chronologically-ordered messages."
      },
      "ListCachedContentsResponse": {
        "properties": {
          "nextPageToken": {
            "type": "string",
            "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
          },
          "cachedContents": {
            "description": "List of cached contents.",
            "items": {
              "$ref": "#/components/schemas/CachedContent"
            },
            "type": "array"
          }
        },
        "description": "Response with CachedContents list.",
        "type": "object"
      },
      "TuningExamples": {
        "properties": {
          "examples": {
            "items": {
              "$ref": "#/components/schemas/TuningExample"
            },
            "type": "array",
            "description": "The examples. Example input can be for text or discuss, but all examples\nin a set must be of the same type."
          }
        },
        "description": "A set of tuning examples. Can be training or validation data.",
        "type": "object"
      },
      "VideoMetadata": {
        "description": "Metadata describes the input video content.",
        "properties": {
          "fps": {
            "format": "double",
            "description": "Optional. The frame rate of the video sent to the model. If not specified, the\ndefault value will be 1.0.\nThe fps range is (0.0, 24.0].",
            "type": "number"
          },
          "endOffset": {
            "type": "string",
            "description": "Optional. The end offset of the video.",
            "format": "google-duration"
          },
          "startOffset": {
            "type": "string",
            "format": "google-duration",
            "description": "Optional. The start offset of the video."
          }
        },
        "type": "object"
      },
      "Media": {
        "properties": {
          "video": {
            "description": "Video as the only one for now.  This is mimicking Vertex proto.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Video"
              }
            ]
          }
        },
        "type": "object",
        "description": "A proto encapsulate various type of media."
      },
      "LogprobsResultCandidate": {
        "description": "Candidate for the logprobs token and score.",
        "properties": {
          "logProbability": {
            "format": "float",
            "description": "The candidate's log probability.",
            "type": "number"
          },
          "tokenId": {
            "format": "int32",
            "description": "The candidate’s token id value.",
            "type": "integer"
          },
          "token": {
            "description": "The candidate’s token string value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FunctionCallingConfig": {
        "properties": {
          "mode": {
            "enum": [
              "MODE_UNSPECIFIED",
              "AUTO",
              "ANY",
              "NONE",
              "VALIDATED"
            ],
            "x-google-enum-descriptions": [
              "Unspecified function calling mode. This value should not be used.",
              "Default model behavior, model decides to predict either a function call\nor a natural language response.",
              "Model is constrained to always predicting a function call only.\nIf \"allowed_function_names\" are set, the predicted function call will be\nlimited to any one of \"allowed_function_names\", else the predicted\nfunction call will be any one of the provided \"function_declarations\".",
              "Model will not predict any function call. Model behavior is same as when\nnot passing any function declarations.",
              "Model decides to predict either a function call\nor a natural language response, but will validate function calls with\nconstrained decoding."
            ],
            "description": "Optional. Specifies the mode in which function calling should execute. If\nunspecified, the default value will be set to AUTO.",
            "type": "string"
          },
          "allowedFunctionNames": {
            "description": "Optional. A set of function names that, when provided, limits the functions the model\nwill call.\n\nThis should only be set when the Mode is ANY. Function names\nshould match [FunctionDeclaration.name]. With mode set to ANY, model will\npredict a function call from the set of function names provided.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "description": "Configuration for specifying function calling behavior.",
        "type": "object"
      },
      "Corpus": {
        "properties": {
          "createTime": {
            "description": "Output only. The Timestamp of when the `Corpus` was created.",
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "displayName": {
            "description": "Optional. The human-readable display name for the `Corpus`. The display name must be\nno more than 512 characters in length, including spaces.\nExample: \"Docs on Semantic Retriever\"",
            "type": "string"
          },
          "updateTime": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. The Timestamp of when the `Corpus` was last updated.",
            "format": "date-time"
          },
          "name": {
            "x-google-identifier": true,
            "type": "string",
            "description": "Immutable. Identifier. The `Corpus` resource name. The ID (name excluding the \"corpora/\" prefix)\ncan contain up to 40 characters that are lowercase alphanumeric or dashes\n(-). The ID cannot start or end with a dash. If the name is empty on\ncreate, a unique name will be derived from `display_name` along with a 12\ncharacter random suffix.\nExample: `corpora/my-awesome-corpora-123a456b789c`",
            "x-google-immutable": true
          }
        },
        "type": "object",
        "description": "A `Corpus` is a collection of `Document`s.\nA project can create up to 5 corpora."
      },
      "GroundingAttribution": {
        "properties": {
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ],
            "description": "Grounding source content that makes up this attribution."
          },
          "sourceId": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AttributionSourceId"
              }
            ],
            "description": "Output only. Identifier for the source contributing to this attribution."
          }
        },
        "type": "object",
        "description": "Attribution for a source that contributed to an answer."
      },
      "ListFilesResponse": {
        "description": "Response for `ListFiles`.",
        "type": "object",
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "type": "array",
            "description": "The list of `File`s."
          },
          "nextPageToken": {
            "type": "string",
            "description": "A token that can be sent as a `page_token` into a subsequent `ListFiles`\ncall."
          }
        }
      },
      "ContentFilter": {
        "type": "object",
        "properties": {
          "reason": {
            "enum": [
              "BLOCKED_REASON_UNSPECIFIED",
              "SAFETY",
              "OTHER"
            ],
            "description": "The reason content was blocked during request processing.",
            "x-google-enum-descriptions": [
              "A blocked reason was not specified.",
              "Content was blocked by safety settings.",
              "Content was blocked, but the reason is uncategorized."
            ],
            "type": "string"
          },
          "message": {
            "description": "A string that describes the filtering behavior in more detail.",
            "type": "string"
          }
        },
        "description": "Content filtering metadata associated with processing a single request.\n\nContentFilter contains a reason and an optional supporting string. The reason\nmay be unspecified."
      },
      "SafetySetting": {
        "type": "object",
        "description": "Safety setting, affecting the safety-blocking behavior.\n\nPassing a safety setting for a category changes the allowed probability that\ncontent is blocked.",
        "required": [
          "category",
          "threshold"
        ],
        "properties": {
          "category": {
            "description": "Required. The category for this setting.",
            "allOf": [
              {
                "$ref": "#/components/schemas/HarmCategory"
              }
            ]
          },
          "threshold": {
            "enum": [
              "HARM_BLOCK_THRESHOLD_UNSPECIFIED",
              "BLOCK_LOW_AND_ABOVE",
              "BLOCK_MEDIUM_AND_ABOVE",
              "BLOCK_ONLY_HIGH",
              "BLOCK_NONE",
              "OFF"
            ],
            "description": "Required. Controls the probability threshold at which harm is blocked.",
            "type": "string",
            "x-google-enum-descriptions": [
              "Threshold is unspecified.",
              "Content with NEGLIGIBLE will be allowed.",
              "Content with NEGLIGIBLE and LOW will be allowed.",
              "Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.",
              "All content will be allowed.",
              "Turn off the safety filter."
            ]
          }
        }
      },
      "EmbedTextRequest": {
        "type": "object",
        "description": "Request to get a text embedding from the model.",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "Required. The model name to use with the format model=models/{model}."
          },
          "text": {
            "type": "string",
            "description": "Optional. The free-form input text that the model will turn into an embedding."
          }
        }
      },
      "ChunkData": {
        "type": "object",
        "description": "Extracted data that represents the `Chunk` content.",
        "properties": {
          "stringValue": {
            "type": "string",
            "description": "The `Chunk` content as a string.\nThe maximum number of tokens per chunk is 2043."
          }
        }
      },
      "Modality": {
        "enum": [
          "MODALITY_UNSPECIFIED",
          "TEXT",
          "IMAGE",
          "VIDEO",
          "AUDIO",
          "DOCUMENT"
        ],
        "x-google-enum-descriptions": [
          "Unspecified modality.",
          "Plain text.",
          "Image.",
          "Video.",
          "Audio.",
          "Document, e.g. PDF."
        ],
        "type": "string"
      },
      "RetrievalMetadata": {
        "description": "Metadata related to retrieval in the grounding flow.",
        "properties": {
          "googleSearchDynamicRetrievalScore": {
            "description": "Optional. Score indicating how likely information from google search could help\nanswer the prompt. The score is in the range [0, 1], where 0 is the least\nlikely and 1 is the most likely. This score is only populated when\ngoogle search grounding and dynamic retrieval is enabled. It will be\ncompared to the threshold to determine whether to trigger google search.",
            "type": "number",
            "format": "float"
          }
        },
        "type": "object"
      },
      "UsageMetadata": {
        "properties": {
          "candidatesTokensDetails": {
            "description": "Output only. List of modalities that were returned in the response.",
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            },
            "readOnly": true,
            "type": "array"
          },
          "promptTokensDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            },
            "description": "Output only. List of modalities that were processed in the request input.",
            "readOnly": true
          },
          "cachedContentTokenCount": {
            "type": "integer",
            "description": "Number of tokens in the cached part of the prompt (the cached content)",
            "format": "int32"
          },
          "promptTokenCount": {
            "description": "Number of tokens in the prompt. When `cached_content` is set, this is\nstill the total effective prompt size meaning this includes the number of\ntokens in the cached content.",
            "type": "integer",
            "format": "int32"
          },
          "toolUsePromptTokensDetails": {
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            },
            "readOnly": true,
            "description": "Output only. List of modalities that were processed for tool-use request inputs.",
            "type": "array"
          },
          "toolUsePromptTokenCount": {
            "description": "Output only. Number of tokens present in tool-use prompt(s).",
            "format": "int32",
            "type": "integer",
            "readOnly": true
          },
          "thoughtsTokenCount": {
            "description": "Output only. Number of tokens of thoughts for thinking models.",
            "format": "int32",
            "type": "integer",
            "readOnly": true
          },
          "candidatesTokenCount": {
            "format": "int32",
            "type": "integer",
            "description": "Total number of tokens across all the generated response candidates."
          },
          "totalTokenCount": {
            "description": "Total token count for the generation request (prompt + response\ncandidates).",
            "type": "integer",
            "format": "int32"
          },
          "cacheTokensDetails": {
            "items": {
              "$ref": "#/components/schemas/ModalityTokenCount"
            },
            "description": "Output only. List of modalities of the cached content in the request input.",
            "type": "array",
            "readOnly": true
          }
        },
        "type": "object",
        "description": "Metadata on the generation request's token usage."
      },
      "GroundingSupport": {
        "type": "object",
        "description": "Grounding support.",
        "properties": {
          "segment": {
            "description": "Segment of the content this support belongs to.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Segment"
              }
            ]
          },
          "confidenceScores": {
            "type": "array",
            "items": {
              "format": "float",
              "type": "number"
            },
            "description": "Confidence score of the support references. Ranges from 0 to 1. 1 is the\nmost confident. This list must have the same size as the\ngrounding_chunk_indices."
          },
          "groundingChunkIndices": {
            "type": "array",
            "description": "A list of indices (into 'grounding_chunk') specifying the\ncitations associated with the claim. For instance [1,3,4] means\nthat grounding_chunk[1], grounding_chunk[3],\ngrounding_chunk[4] are the retrieved content attributed to the claim.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "Video": {
        "properties": {
          "uri": {
            "type": "string",
            "description": "Path to another storage."
          },
          "video": {
            "type": "string",
            "format": "byte",
            "description": "Raw bytes."
          }
        },
        "type": "object",
        "description": "Representation of a video."
      },
      "BatchUpdateChunksRequest": {
        "description": "Request to batch update `Chunk`s.",
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the `Chunk`s to update.\nA maximum of 100 `Chunk`s can be updated in a batch.",
            "items": {
              "$ref": "#/components/schemas/UpdateChunkRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "requests"
        ]
      },
      "RelevantChunk": {
        "description": "The information for a chunk relevant to a query.",
        "type": "object",
        "properties": {
          "chunk": {
            "description": "`Chunk` associated with the query.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Chunk"
              }
            ]
          },
          "chunkRelevanceScore": {
            "type": "number",
            "format": "float",
            "description": "`Chunk` relevance to the query."
          }
        }
      },
      "BatchEmbedContentsRequest": {
        "type": "object",
        "description": "Batch request to get embeddings from the model for a list of prompts.",
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/components/schemas/EmbedContentRequest"
            },
            "type": "array",
            "description": "Required. Embed requests for the batch. The model in each of these requests must\nmatch the model specified `BatchEmbedContentsRequest.model`."
          }
        },
        "required": [
          "requests"
        ]
      },
      "Dataset": {
        "type": "object",
        "description": "Dataset for training or validation.",
        "properties": {
          "examples": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TuningExamples"
              }
            ],
            "description": "Optional. Inline examples with simple input/output text."
          }
        }
      },
      "TuningSnapshot": {
        "type": "object",
        "description": "Record for a single tuning step.",
        "properties": {
          "step": {
            "type": "integer",
            "readOnly": true,
            "format": "int32",
            "description": "Output only. The tuning step."
          },
          "meanLoss": {
            "description": "Output only. The mean loss of the training examples for this step.",
            "format": "float",
            "type": "number",
            "readOnly": true
          },
          "computeTime": {
            "format": "date-time",
            "description": "Output only. The timestamp when this metric was computed.",
            "readOnly": true,
            "type": "string"
          },
          "epoch": {
            "readOnly": true,
            "description": "Output only. The epoch this step was part of.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SemanticRetrieverChunk": {
        "properties": {
          "source": {
            "readOnly": true,
            "type": "string",
            "description": "Output only. Name of the source matching the request's\n`SemanticRetrieverConfig.source`. Example: `corpora/123` or\n`corpora/123/documents/abc`"
          },
          "chunk": {
            "readOnly": true,
            "description": "Output only. Name of the `Chunk` containing the attributed text.\nExample: `corpora/123/documents/abc/chunks/xyz`",
            "type": "string"
          }
        },
        "description": "Identifier for a `Chunk` retrieved via Semantic Retriever specified in the\n`GenerateAnswerRequest` using `SemanticRetrieverConfig`.",
        "type": "object"
      },
      "Web": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the chunk."
          },
          "uri": {
            "type": "string",
            "description": "URI reference of the chunk."
          }
        },
        "description": "Chunk from the web."
      },
      "ListGeneratedFilesResponse": {
        "type": "object",
        "properties": {
          "generatedFiles": {
            "items": {
              "$ref": "#/components/schemas/GeneratedFile"
            },
            "type": "array",
            "description": "The list of `GeneratedFile`s."
          },
          "nextPageToken": {
            "type": "string",
            "description": "A token that can be sent as a `page_token` into a subsequent\n`ListGeneratedFiles` call."
          }
        },
        "description": "Response for `ListGeneratedFiles`."
      },
      "Part": {
        "description": "A datatype containing media that is part of a multi-part `Content` message.\n\nA `Part` consists of data which has an associated datatype. A `Part` can only\ncontain one of the accepted types in `Part.data`.\n\nA `Part` must have a fixed IANA MIME type identifying the type and subtype\nof the media if the `inline_data` field is filled with raw bytes.",
        "type": "object",
        "properties": {
          "executableCode": {
            "description": "Code generated by the model that is meant to be executed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExecutableCode"
              }
            ]
          },
          "videoMetadata": {
            "description": "Optional. Video metadata. The metadata should only be specified while the video\ndata is presented in inline_data or file_data.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VideoMetadata"
              }
            ]
          },
          "functionResponse": {
            "description": "The result output of a `FunctionCall` that contains a string\nrepresenting the `FunctionDeclaration.name` and a structured JSON\nobject containing any output from the function is used as context to\nthe model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionResponse"
              }
            ]
          },
          "thought": {
            "type": "boolean",
            "description": "Optional. Indicates if the part is thought from the model."
          },
          "thoughtSignature": {
            "description": "Optional. An opaque signature for the thought so it can be reused in subsequent\nrequests.",
            "type": "string",
            "format": "byte"
          },
          "functionCall": {
            "description": "A predicted `FunctionCall` returned from the model that contains\na string representing the `FunctionDeclaration.name` with the\narguments and their values.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionCall"
              }
            ]
          },
          "codeExecutionResult": {
            "description": "Result of executing the `ExecutableCode`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CodeExecutionResult"
              }
            ]
          },
          "inlineData": {
            "description": "Inline media bytes.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Blob"
              }
            ]
          },
          "text": {
            "description": "Inline text.",
            "type": "string"
          },
          "fileData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileData"
              }
            ],
            "description": "URI based data."
          }
        }
      },
      "VideoFileMetadata": {
        "description": "Metadata for a video `File`.",
        "type": "object",
        "properties": {
          "videoDuration": {
            "type": "string",
            "format": "google-duration",
            "description": "Duration of the video."
          }
        }
      },
      "EmbedContentRequest": {
        "properties": {
          "outputDimensionality": {
            "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive\nvalues in the output embedding are truncated from the end. Supported by\nnewer models since 2024 only. You cannot set this value if using the\nearlier model (`models/embedding-001`).",
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ],
            "description": "Required. The content to embed. Only the `parts.text` fields will be counted."
          },
          "title": {
            "description": "Optional. An optional title for the text. Only applicable when TaskType is\n`RETRIEVAL_DOCUMENT`.\n\nNote: Specifying a `title` for `RETRIEVAL_DOCUMENT` provides better quality\nembeddings for retrieval.",
            "type": "string"
          },
          "taskType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ],
            "description": "Optional. Optional task type for which the embeddings will be used. Not supported on\nearlier models (`models/embedding-001`)."
          },
          "model": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.\n\nThis name should match a model name returned by the `ListModels` method.\n\nFormat: `models/{model}`",
            "type": "string"
          }
        },
        "required": [
          "model",
          "content"
        ],
        "type": "object",
        "description": "Request containing the `Content` for the model to embed."
      },
      "Candidate": {
        "type": "object",
        "description": "A response candidate generated from the model.",
        "properties": {
          "content": {
            "readOnly": true,
            "description": "Output only. Generated content returned from the model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Content"
              }
            ]
          },
          "tokenCount": {
            "readOnly": true,
            "format": "int32",
            "description": "Output only. Token count for this candidate.",
            "type": "integer"
          },
          "logprobsResult": {
            "readOnly": true,
            "description": "Output only. Log-likelihood scores for the response tokens and top tokens",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogprobsResult"
              }
            ]
          },
          "groundingMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroundingMetadata"
              }
            ],
            "readOnly": true,
            "description": "Output only. Grounding metadata for the candidate.\n\nThis field is populated for `GenerateContent` calls."
          },
          "finishReason": {
            "type": "string",
            "description": "Optional. Output only. The reason why the model stopped generating tokens.\n\nIf empty, the model has not stopped generating tokens.",
            "readOnly": true,
            "x-google-enum-descriptions": [
              "Default value. This value is unused.",
              "Natural stop point of the model or provided stop sequence.",
              "The maximum number of tokens as specified in the request was reached.",
              "The response candidate content was flagged for safety reasons.",
              "The response candidate content was flagged for recitation reasons.",
              "The response candidate content was flagged for using an unsupported\nlanguage.",
              "Unknown reason.",
              "Token generation stopped because the content contains forbidden terms.",
              "Token generation stopped for potentially containing prohibited content.",
              "Token generation stopped because the content potentially contains\nSensitive Personally Identifiable Information (SPII).",
              "The function call generated by the model is invalid.",
              "Token generation stopped because generated images contain safety\nviolations."
            ],
            "enum": [
              "FINISH_REASON_UNSPECIFIED",
              "STOP",
              "MAX_TOKENS",
              "SAFETY",
              "RECITATION",
              "LANGUAGE",
              "OTHER",
              "BLOCKLIST",
              "PROHIBITED_CONTENT",
              "SPII",
              "MALFORMED_FUNCTION_CALL",
              "IMAGE_SAFETY"
            ]
          },
          "avgLogprobs": {
            "format": "double",
            "description": "Output only. Average log probability score of the candidate.",
            "readOnly": true,
            "type": "number"
          },
          "citationMetadata": {
            "readOnly": true,
            "description": "Output only. Citation information for model-generated candidate.\n\nThis field may be populated with recitation information for any text\nincluded in the `content`. These are passages that are \"recited\" from\ncopyrighted material in the foundational LLM's training data.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CitationMetadata"
              }
            ]
          },
          "safetyRatings": {
            "items": {
              "$ref": "#/components/schemas/SafetyRating"
            },
            "type": "array",
            "description": "List of ratings for the safety of a response candidate.\n\nThere is at most one rating per category."
          },
          "groundingAttributions": {
            "items": {
              "$ref": "#/components/schemas/GroundingAttribution"
            },
            "type": "array",
            "description": "Output only. Attribution information for sources that contributed to a grounded answer.\n\nThis field is populated for `GenerateAnswer` calls.",
            "readOnly": true
          },
          "index": {
            "description": "Output only. Index of the candidate in the list of response candidates.",
            "format": "int32",
            "type": "integer",
            "readOnly": true
          },
          "urlContextMetadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlContextMetadata"
              }
            ],
            "readOnly": true,
            "description": "Output only. Metadata related to url context retrieval tool."
          }
        }
      },
      "GenerateVideoResponse": {
        "properties": {
          "raiMediaFilteredCount": {
            "description": "Returns if any videos were filtered due to RAI policies.",
            "format": "int32",
            "type": "integer"
          },
          "raiMediaFilteredReasons": {
            "type": "array",
            "description": "Returns rai failure reasons if any.",
            "items": {
              "type": "string"
            }
          },
          "generatedSamples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "description": "The generated samples."
          }
        },
        "description": "Veo response.",
        "type": "object"
      },
      "Hyperparameters": {
        "description": "Hyperparameters controlling the tuning process. Read more at\nhttps://ai.google.dev/docs/model_tuning_guidance",
        "type": "object",
        "properties": {
          "learningRate": {
            "format": "float",
            "description": "Optional. Immutable. The learning rate hyperparameter for tuning.\nIf not set, a default of 0.001 or 0.0002 will be calculated based on the\nnumber of training examples.",
            "type": "number",
            "x-google-immutable": true
          },
          "epochCount": {
            "x-google-immutable": true,
            "type": "integer",
            "format": "int32",
            "description": "Immutable. The number of training epochs. An epoch is one pass through the training\ndata.\nIf not set, a default of 5 will be used."
          },
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "description": "Immutable. The batch size hyperparameter for tuning.\nIf not set, a default of 4 or 16 will be used based on the number of\ntraining examples.",
            "x-google-immutable": true
          },
          "learningRateMultiplier": {
            "format": "float",
            "type": "number",
            "description": "Optional. Immutable. The learning rate multiplier is used to calculate a final learning_rate\nbased on the default (recommended) value.\nActual learning rate := learning_rate_multiplier * default learning rate\nDefault learning rate is dependent on base model and dataset size.\nIf not set, a default of 1.0 will be used.",
            "x-google-immutable": true
          }
        }
      },
      "Message": {
        "type": "object",
        "description": "The base unit of structured text.\n\nA `Message` includes an `author` and the `content` of\nthe `Message`.\n\nThe `author` is used to tag messages when they are fed to the\nmodel as text.",
        "required": [
          "content"
        ],
        "properties": {
          "content": {
            "type": "string",
            "description": "Required. The text content of the structured `Message`."
          },
          "citationMetadata": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CitationMetadata"
              }
            ],
            "description": "Output only. Citation information for model-generated `content` in this `Message`.\n\nIf this `Message` was generated as output from the model, this field may be\npopulated with attribution information for any text included in the\n`content`. This field is used only on output."
          },
          "author": {
            "description": "Optional. The author of this Message.\n\nThis serves as a key for tagging\nthe content of this Message when it is fed to the model as text.\n\nThe author can be any alphanumeric string.",
            "type": "string"
          }
        }
      },
      "BatchCreateChunksRequest": {
        "description": "Request to batch create `Chunk`s.",
        "type": "object",
        "required": [
          "requests"
        ],
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the `Chunk`s to create.\nA maximum of 100 `Chunk`s can be created in a batch.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateChunkRequest"
            }
          }
        }
      },
      "CountTextTokensResponse": {
        "description": "A response from `CountTextTokens`.\n\nIt returns the model's `token_count` for the `prompt`.",
        "properties": {
          "tokenCount": {
            "format": "int32",
            "description": "The number of tokens that the `model` tokenizes the `prompt` into.\n\nAlways non-negative.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TransferOwnershipResponse": {
        "type": "object",
        "description": "Response from `TransferOwnership`."
      },
      "Type": {
        "enum": [
          "TYPE_UNSPECIFIED",
          "STRING",
          "NUMBER",
          "INTEGER",
          "BOOLEAN",
          "ARRAY",
          "OBJECT",
          "NULL"
        ],
        "x-google-enum-descriptions": [
          "Not specified, should not be used.",
          "String type.",
          "Number type.",
          "Integer type.",
          "Boolean type.",
          "Array type.",
          "Object type.",
          "Null type."
        ],
        "type": "string"
      },
      "Blob": {
        "properties": {
          "mimeType": {
            "type": "string",
            "description": "The IANA standard MIME type of the source data.\nExamples:\n  - image/png\n  - image/jpeg\nIf an unsupported MIME type is provided, an error will be returned. For a\ncomplete list of supported types, see [Supported file\nformats](https://ai.google.dev/gemini-api/docs/prompting_with_media#supported_file_formats)."
          },
          "data": {
            "format": "byte",
            "description": "Raw bytes for media formats.",
            "type": "string"
          }
        },
        "description": "Raw media bytes.\n\nText should not be sent as raw bytes, use the 'text' field.",
        "type": "object"
      },
      "UrlContextMetadata": {
        "properties": {
          "urlMetadata": {
            "items": {
              "$ref": "#/components/schemas/UrlMetadata"
            },
            "description": "List of url context.",
            "type": "array"
          }
        },
        "description": "Metadata related to url context retrieval tool.",
        "type": "object"
      }
    }
  },
  "servers": [
    {
      "description": "Global Endpoint",
      "url": "https://generativelanguage.googleapis.com"
    }
  ],
  "info": {
    "description": "The Gemini API allows developers to build generative AI applications using Gemini models. Gemini is our most capable model, built from the ground up to be multimodal. It can generalize and seamlessly understand, operate across, and combine different types of information including language, images, audio, video, and code. You can use the Gemini API for use cases like reasoning across text and images, content generation, dialogue agents, summarization and classification systems, and more.",
    "x-google-revision": "20250625",
    "title": "Generative Language API",
    "version": "v1beta"
  },
  "openapi": "3.0.3"
}
